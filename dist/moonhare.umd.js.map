{"version":3,"file":"moonhare.umd.js","sources":["../src/order.ts","../src/style.ts","../src/plugins/variants.ts","../src/tools.ts","../src/config.ts","../src/plugins/index.ts","../src/plugins/utilities.ts","../src/plugins/preflight.ts","../src/util.ts","../src/index.ts"],"sourcesContent":["// TODO: add ['any-link', 'first-child', 'fullscreen', 'future', 'in-range', 'last-child', 'left', 'out-of-range', 'right', 'scope']\nexport const variantOrder = [\n    'hover',\n    'focus',\n    'active',\n    'visited',\n    'link',\n    'target',\n    'focus-visible',\n    'focus-within',\n    'checked',\n    'not-checked',\n    'default',\n    'disabled',\n    'enabled',\n    'indeterminate',\n    'invalid',\n    'valid',\n    'optional',\n    'required',\n    'placeholder-shown',\n    'read-only',\n    'read-write',\n    'not-disabled',\n    'first-of-type',\n    'not-first-of-type',\n    'last-of-type',\n    'not-last-of-type',\n    'first',\n    'last',\n    'not-first',\n    'not-last',\n    'only-child',\n    'not-only-child',\n    'only-of-type',\n    'not-only-of-type',\n    'even',\n    'odd',\n    'even-of-type',\n    'odd-of-type',\n    'root',\n    'empty',\n    'before',\n    'after',\n    'first-letter',\n    'first-line',\n    'selection',\n    'svg',\n    'all',\n    'children',\n    'siblings',\n    'sibling',\n    'ltr',\n    'rtl',\n    'group-hover',\n    'group-focus',\n    'group-active',\n    'group-visited',\n    'motion-safe',\n    'motion-reduce'\n];\n\nexport const layerOrder = ['base', 'components', 'shortcuts', 'utilities'];\n\nexport enum pluginOrder {\n    'container' = 100,\n    'space' = 200,\n    'divideWidth' = 300,\n    'divideColor' = 400,\n    'divideStyle' = 500,\n    'divideOpacity' = 600,\n    'accessibility' = 700,\n    'appearance' = 800,\n    'backgroundAttachment' = 900,\n    'backgroundClip' = 1000,\n    'backgroundColor' = 1100,\n    'backgroundImage' = 1200,\n    'gradientColorStops' = 1300,\n    'backgroundOpacity' = 1400,\n    'backgroundPosition' = 1500,\n    'backgroundRepeat' = 1600,\n    'backgroundSize' = 1700,\n    'backgroundOrigin' = 1750,\n    'borderCollapse' = 1800,\n    'borderColor' = 1900,\n    'borderOpacity' = 2000,\n    'borderRadius' = 2100,\n    'borderStyle' = 2200,\n    'borderWidth' = 2300,\n    'boxDecorationBreak' = 2350,\n    'boxSizing' = 2400,\n    'cursor' = 2500,\n    'captionSide' = 2550,\n    'emptyCells' = 2560,\n    'display' = 2600,\n    'flexDirection' = 2700,\n    'flexWrap' = 2800,\n    'placeItems' = 2900,\n    'placeContent' = 3000,\n    'placeSelf' = 3100,\n    'alignItems' = 3200,\n    'alignContent' = 3300,\n    'alignSelf' = 3400,\n    'justifyItems' = 3500,\n    'justifyContent' = 3600,\n    'justifySelf' = 3700,\n    'flex' = 3800,\n    'flexGrow' = 3900,\n    'flexShrink' = 4000,\n    'order' = 4100,\n    'float' = 4200,\n    'clear' = 4300,\n    'fontFamily' = 4400,\n    'fontWeight' = 4500,\n    'height' = 4600,\n    'fontSize' = 4700,\n    'lineHeight' = 4800,\n    'listStylePosition' = 4900,\n    'listStyleType' = 5000,\n    'margin' = 5100,\n    'maxHeight' = 5200,\n    'maxWidth' = 5300,\n    'minHeight' = 5400,\n    'minWidth' = 5500,\n    'objectFit' = 5600,\n    'objectPosition' = 5700,\n    'opacity' = 5800,\n    'outline' = 5900,\n    'overflow' = 6000,\n    'overscrollBehavior' = 6100,\n    'padding' = 6200,\n    'placeholderColor' = 6300,\n    'placeholderOpacity' = 6400,\n    'caretColor' = 6450,\n    'caretOpacity' = 6460,\n    'tabSize' = 6470,\n    'pointerEvents' = 6500,\n    'position' = 6600,\n    'inset' = 6700,\n    'resize' = 6800,\n    'boxShadow' = 6900,\n    'boxShadowColor' = 6950,\n    'ringWidth' = 7000,\n    'ringOffsetColor' = 7100,\n    'ringOffsetWidth' = 7200,\n    'ringColor' = 7300,\n    'ringOpacity' = 7400,\n    'fill' = 7500,\n    'stroke' = 7600,\n    'strokeWidth' = 7700,\n    'strokeDashArray' = 7750,\n    'strokeDashOffset' = 7760,\n    'tableLayout' = 7800,\n    'textAlign' = 7900,\n    'textColor' = 8000,\n    'textOpacity' = 8100,\n    'textOverflow' = 8200,\n    'textShadow' = 8250,\n    'fontStyle' = 8300,\n    'textTransform' = 8400,\n    'textDecorationStyle' = 8450,\n    'textDecorationLength' = 8455,\n    'textDecorationColor' = 8460,\n    'textDecorationOpacity' = 8470,\n    'textDecorationOffset' = 8480,\n    'textDecoration' = 8500,\n    'textIndent' = 8550,\n    'textStrokeColor' = 8560,\n    'textStrokeWidth' = 8570,\n    'content' = 8580,\n    'fontSmoothing' = 8600,\n    'fontVariantNumeric' = 8700,\n    'letterSpacing' = 8800,\n    'userSelect' = 8900,\n    'verticalAlign' = 9000,\n    'visibility' = 9100,\n    'backfaceVisibility' = 9150,\n    'whitespace' = 9200,\n    'wordBreak' = 9300,\n    'writingMode' = 9340,\n    'hyphens' = 9350,\n    'width' = 9400,\n    'zIndex' = 9500,\n    'isolation' = 9550,\n    'gap' = 9600,\n    'gridAutoFlow' = 9700,\n    'gridTemplateColumns' = 9800,\n    'gridAutoColumns' = 9900,\n    'gridColumn' = 10000,\n    'gridColumnStart' = 10100,\n    'gridColumnEnd' = 10200,\n    'gridTemplateRows' = 10300,\n    'gridAutoRows' = 10400,\n    'gridRow' = 10500,\n    'gridRowStart' = 10600,\n    'gridRowEnd' = 10700,\n    'transform' = 10800,\n    'transformOrigin' = 10900,\n    'scale' = 11000,\n    'rotate' = 11100,\n    'translate' = 11200,\n    'skew' = 11300,\n    'perspective' = 11350,\n    'perspectiveOrigin' = 11360,\n    'transitionProperty' = 11400,\n    'transitionTimingFunction' = 11500,\n    'transitionDuration' = 11600,\n    'transitionDelay' = 11700,\n    'keyframes' = 11800,\n    'animation' = 11900,\n    'imageRendering' = 11950,\n    'mixBlendMode' = 12000,\n    'backgroundBlendMode' = 12100,\n    'filter' = 12200,\n    'blur' = 12300,\n    'brightness' = 12400,\n    'contrast' = 12500,\n    'dropShadow' = 12600,\n    'grayscale' = 12700,\n    'hueRotate' = 12800,\n    'invert' = 12900,\n    'saturate' = 13000,\n    'sepia' = 13100,\n    'backdropFilter' = 13200,\n    'backdropBlur' = 13300,\n    'backdropBrightness' = 13400,\n    'backdropContrast' = 13500,\n    'backdropGrayscale' = 13600,\n    'backdropHueRotate' = 13700,\n    'backdropInvert' = 13800,\n    'backdropOpacity' = 13900,\n    'backdropSaturate' = 14000,\n    'backdropSepia' = 14100\n}\n","import * as csstype from 'csstype';\nimport {layerOrder, pluginOrder} from './order';\n\nexport type Value = null | undefined | string | number;\n\nexport interface Meta {\n    layer: string;\n    order: number;\n    offset: number;\n    variants: string[];\n}\n\nexport interface Block\n    extends csstype.PropertiesFallback<Value, Value>,\n        csstype.PropertiesHyphenFallback<Value, Value> {\n    [property: string]: Value | Value[] | Block;\n}\n\nexport interface CSS {\n    [selector: string]: Block;\n}\n\nexport type LayerName = 'base' | 'utilities' | 'components';\n\nexport class Declaration {\n    property: string;\n    value: string;\n    important: boolean;\n    constructor(property: string, value: string, important = false) {\n        this.property = property;\n        this.value = value;\n        this.important = important;\n    }\n\n    build() {\n        return `${this.property}:${this.value}${\n            this.important ? '!important' : ''\n        }`;\n    }\n}\n\nexport class Container {\n    nodes: (Declaration | Container)[];\n    _meta: Meta = {\n        layer: 'components',\n        order: 0,\n        offset: 0,\n        variants: []\n    };\n    important = false;\n\n    constructor(nodes: (Declaration | Container)[] = []) {\n        this.nodes = nodes;\n    }\n\n    meta(\n        layer = this._meta.layer,\n        plugin?: string,\n        order = this._meta.order,\n        offset = this._meta.offset,\n        variants = this._meta.variants\n    ) {\n        this._meta = {\n            layer,\n            order: plugin\n                ? pluginOrder[plugin as keyof typeof pluginOrder]\n                : order,\n            offset,\n            variants\n        };\n        return this;\n    }\n\n    build(): string {\n        return this.nodes.map(node => node.build()).join('');\n    }\n}\n\nexport class Style extends Container {\n    selectors: string[] = [];\n    prepend: string[] = [];\n    append: string[] = [];\n    atRules: string[] = [];\n    nodes: Declaration[];\n    constructor(\n        selectors: string | string[] = [],\n        style: Declaration | Declaration[] = []\n    ) {\n        super();\n        if (Array.isArray(selectors)) this.selectors = selectors;\n        else this.selectorText(selectors);\n        this.nodes = Array.isArray(style) ? style : [style];\n    }\n\n    selectorText(selectorText?: string) {\n        if (selectorText) this.selectors = selectorText.split(/\\s*,\\s*/);\n        else\n            return this.selectors\n                .map(\n                    selector =>\n                        `${this.prepend.join('')}${selector}${this.append.join(\n                            ''\n                        )}`\n                )\n                .join(',');\n    }\n\n    clone(\n        selectors: string | string[] = [...this.selectors],\n        nodes: Declaration | Declaration[] = [...this.nodes]\n    ) {\n        const style = new Style(selectors, nodes);\n        style.atRules = [...this.atRules];\n        style._meta = {...this._meta};\n        return style;\n    }\n\n    build() {\n        let css = `${this.selectorText(undefined)}{${this.nodes\n            .map(decl => {\n                if (this.important) decl.important = true;\n                return decl.build();\n            })\n            .join(';')}}`;\n        this.atRules.forEach(rule => (css = `${rule}{${css}}`));\n        return css;\n    }\n}\n\nexport class InlineAtRule extends Container {\n    name: string;\n    params: string;\n    constructor(name: string, params: string) {\n        super();\n        this.name = name;\n        this.params = params;\n    }\n    build() {\n        return `${this.name} ${this.params};`;\n    }\n}\n\ntype sheetVariants = {[variant: string]: sheetVariants | Container[]};\ntype sheetLayers = Record<string, sheetVariants>;\nexport class StyleSheet {\n    layers: sheetLayers = {};\n    variantOrder: string[] = [];\n    constructor() {} // eslint-disable-line\n    add(...styles: Container[]) {\n        styles.forEach(style => {\n            let layer =\n                this.layers[style._meta.layer] ||\n                (this.layers[style._meta.layer] = {});\n\n            for (const variant of style._meta.variants) {\n                layer = (layer[variant] ||\n                    (layer[variant] = {})) as sheetVariants;\n            }\n            ((layer.DEFAULT || (layer.DEFAULT = [])) as Container[]).push(\n                style\n            );\n        });\n    }\n    buildGroup(styles?: Container[]) {\n        return styles\n            ? styles\n                  .sort(\n                      (a: Container, b: Container) =>\n                          a._meta.order - b._meta.order ||\n                          a._meta.offset - b._meta.offset\n                  )\n                  .map(style => {\n                      return style.build();\n                  })\n                  .join('')\n            : '';\n    }\n    buildVariant(variantOrder: string[], variants?: sheetVariants): string {\n        return variants\n            ? this.buildGroup(variants.DEFAULT as Container[]) +\n                  variantOrder\n                      .map(variant =>\n                          this.buildVariant(\n                              variantOrder,\n                              variants[variant] as sheetVariants\n                          )\n                      )\n                      .join('')\n            : '';\n    }\n    build(variantOrder = this.variantOrder) {\n        return layerOrder\n            .map(layer => this.buildVariant(variantOrder, this.layers[layer]))\n            .join('');\n    }\n}\nconst IMPORTANT = /\\s*!important\\s*$/i;\n\nconst UNITLESS = [\n    'box-flex',\n    'box-flex-group',\n    'column-count',\n    'flex',\n    'flex-grow',\n    'flex-positive',\n    'flex-shrink',\n    'flex-negative',\n    'font-weight',\n    'line-clamp',\n    'line-height',\n    'opacity',\n    'order',\n    'orphans',\n    'tab-size',\n    'widows',\n    'z-index',\n    'zoom',\n    'fill-opacity',\n    'stroke-dashoffset',\n    'stroke-opacity',\n    'stroke-width'\n];\n\nexport function dashify(str: string) {\n    return str\n        .replace(/([A-Z])/g, '-$1')\n        .replace(/^ms-/, '-ms-')\n        .toLowerCase();\n}\n\nfunction decl(parent: Style, name: string, value?: string | number | null) {\n    name = dashify(name);\n    let propValue = '',\n        important = false;\n    if (value === undefined || value === null) return;\n    else if (typeof value === 'number') {\n        if (value === 0 || UNITLESS.indexOf(name) > -1)\n            propValue = value.toString();\n        else propValue = value + 'px';\n    } else if (IMPORTANT.test(value)) {\n        propValue = value.replace(IMPORTANT, '');\n        important = true;\n    } else propValue = value;\n\n    parent.nodes.push(new Declaration(name, propValue, important));\n}\n\nexport function parseCSS(parent: string, obj: Block, root?: Style) {\n    if (!root) root = new Style(parent);\n\n    const output = [root];\n    for (const [name, value] of Object.entries(obj)) {\n        if (value === null || typeof value === 'undefined') {\n            continue;\n        } else if (name[0] === '@') {\n            const parts = name.match(\n                /@(\\S+)(\\s+([\\W\\w]*)\\s*)?/\n            ) as RegExpMatchArray;\n            if (parts) {\n                if (typeof value == 'object' && !Array.isArray(value))\n                    output.push(\n                        ...parseCSS(\n                            parent,\n                            value,\n                            root.clone(undefined, [])\n                        ).map(sty => {\n                            sty.atRules.push(`@${parts[1]} ${parts[3]}`);\n                            return sty;\n                        })\n                    );\n            }\n        } else if (Array.isArray(value)) {\n            for (const i of value) {\n                decl(root, name, i);\n            }\n        } else if (typeof value === 'object') {\n            const selector =\n                name[0] === '&'\n                    ? name.replace(/&/g, parent)\n                    : `${parent} ${name.replace(/&/g, parent)}`;\n            output.push(...parseCSS(parent, value, root.clone(selector, [])));\n        } else {\n            decl(root, name, value);\n        }\n    }\n    return output;\n}\n","import type {VariantGenerator, Plugin} from '../interfaces';\n\ntype RawBreakpoint = {raw: string};\ntype MinMaxBreakpoint = {min?: string; max?: string};\ntype ScreenBreakpoint = RawBreakpoint | MinMaxBreakpoint;\n\nexport default (({addVariant, theme}) => {\n    const breakpoints = Object.entries(\n        theme('screens') as Record<string, string | ScreenBreakpoint>\n    ).sort(([, sizeA], [, sizeB]) => sortWeight(sizeA) - sortWeight(sizeB));\n\n    breakpoints.forEach(([name, size], index) => {\n        if (typeof size === 'string') {\n            const [, nextSize] = breakpoints[index + 1] || [];\n            addVariant(name, styleForBreakpoint({min: size}));\n            addVariant(\n                `<${name}`,\n                styleForBreakpoint({\n                    max: size.replace(\n                        /^-?[0-9]+\\.?[0-9]*/,\n                        value => +value - 0.1 + ''\n                    )\n                })\n            );\n            addVariant(\n                `@${name}`,\n                styleForBreakpoint(\n                    nextSize\n                        ? {\n                              min: size,\n                              max: (nextSize as string).replace(\n                                  /^-?[0-9]+\\.?[0-9]*/,\n                                  value => +value - 0.1 + ''\n                              )\n                          }\n                        : {min: size}\n                )\n            );\n            addVariant(`-${name}`, styleForBreakpoint({max: size}));\n            addVariant(\n                `\\\\+${name}`,\n                styleForBreakpoint(\n                    nextSize\n                        ? {min: size, max: nextSize as string}\n                        : {min: size}\n                )\n            );\n        } else {\n            addVariant(name, styleForBreakpoint(size));\n        }\n    });\n\n    /*\n     * See MDN web docs for more information\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\n     */\n    [\n        'active',\n        'any-link',\n        'checked',\n        'default',\n        'disabled',\n        'empty',\n        'enabled',\n        // 'first-child',\n        'first',\n        'first-of-type',\n        'fullscreen',\n        'future',\n        'focus',\n        'focus-visible',\n        'focus-within',\n        'hover',\n        'indeterminate',\n        'in-range',\n        'invalid',\n        // 'last-child',\n        'last',\n        'last-of-type',\n        'left',\n        'link',\n        'only-child',\n        'only-of-type',\n        'optional',\n        'out-of-range',\n        'read-only',\n        'read-write',\n        'required',\n        'right',\n        'root',\n        'scope',\n        'target',\n        'valid',\n        'visited'\n    ].forEach(pseudo => {\n        addVariant(pseudo, ({style}) =>\n            style.append.push(\n                ':' + ['first', 'last'].includes(pseudo)\n                    ? pseudo + '-child'\n                    : pseudo\n            )\n        );\n\n        // Not states\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/:not\n        addVariant('not-' + pseudo, ({style}) =>\n            style.append.push(`:not(:${pseudo})`)\n        );\n\n        // Group states\n        // You'll need to add className=\"group\" to an ancestor to make these work\n        // https://github.com/ben-rogerson/twin.macro/blob/master/docs/group.md\n        addVariant('group-' + pseudo, ({style}) =>\n            style.prepend.push(`group:${pseudo} `)\n        );\n    });\n\n    /*\n     * See MDN web docs for more information\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\n     */\n    [\n        'after',\n        'backdrop',\n        'before',\n        'first-letter',\n        'first-line',\n        'marker',\n        'placeholder',\n        'selection'\n    ].forEach(pseudo => {\n        addVariant(pseudo, ({style}) => style.append.push('::' + pseudo));\n    });\n    ['even', 'odd'].forEach(pseudo => {\n        addVariant(pseudo, ({style}) =>\n            style.append.push(`nth-child(${pseudo})`)\n        );\n    });\n    ['even', 'odd'].forEach(pseudo => {\n        addVariant(pseudo, ({style}) =>\n            style.append.push(`nth-of-type(${pseudo})`)\n        );\n    });\n\n    addVariant('svg', ({style}) => style.append.push(' svg'));\n    addVariant('all', ({style}) => style.append.push(' *'));\n    addVariant('children', ({style}) => style.append.push(' > *'));\n    addVariant('siblings', ({style}) => style.append.push(' ~ *'));\n    addVariant('sibling', ({style}) => style.append.push(' + *'));\n\n    addVariant('ltr', ({style}) => style.append.push(\"[dir='ltr'] \"));\n    addVariant('rtl', ({style}) => style.append.push(\"[dir='rtl'] \"));\n\n    // Motion control\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\n    addVariant('motion-safe', ({style}) =>\n        style.atRules.push('@media (prefers-reduced-motion: no-preference)')\n    );\n    addVariant('motion-reduce', ({style}) =>\n        style.atRules.push('@media (prefers-reduced-motion: reduce)')\n    );\n    ['dark', 'light'].forEach(type => {\n        const at: VariantGenerator = ({style}) =>\n                style.atRules.push(`@media (prefers-color-scheme: ${type})`),\n            dot: VariantGenerator = ({style}) =>\n                style.prepend.push(`.${type} `);\n        addVariant('@' + type, at);\n        addVariant('.' + type, dot);\n        addVariant(type, theme('darkMode') === 'media' ? at : dot);\n    });\n}) as Plugin;\n\nfunction styleForBreakpoint(rule: ScreenBreakpoint): VariantGenerator {\n    const mediaConditions =\n        'raw' in rule\n            ? rule.raw\n            : [\n                  rule.min && `(min-width: ${rule.min})`,\n                  rule.max && `(max-width: ${rule.max})`\n              ]\n                  .filter(Boolean)\n                  .join(' and ');\n    return ({style}) => style.atRules.push(`@media ${mediaConditions}`);\n}\n\n// NOTE: Non-size breakpoints should come first, to avoid using them in the\n// +breakpoint definition.\nfunction sortWeight(breakpoint: string | ScreenBreakpoint): number {\n    return typeof breakpoint === 'string'\n        ? parseInt(breakpoint)\n        : Number.NEGATIVE_INFINITY;\n}\n","import type {UtilityGenerator} from './interfaces';\nimport {dashify} from './style';\n\nexport function propertyStatic(\n    property: string,\n    map: {\n        [key: string]: unknown;\n    }\n): UtilityGenerator {\n    return util =>\n        util\n            .static(map)\n            .property(dashify(property))\n            ?.meta(\n                'utilities',\n                property,\n                undefined,\n                Object.keys(map).indexOf(util.rest) + 1\n            );\n}\n\nexport function propertyValues(\n    values: string[],\n    property?: string\n): UtilityGenerator {\n    return util =>\n        util\n            .string(value => (values.includes(value) ? value : undefined))\n            .property(property ? dashify(property) : util.id)\n            ?.meta(\n                'utilities',\n                property || util.id,\n                undefined,\n                values.indexOf(util.value as string) + 1\n            );\n}\n\nexport function propertyBody(\n    map: {\n        [key: string]: unknown;\n    },\n    property?: string\n): UtilityGenerator {\n    return util =>\n        util\n            .body(map)\n            .property(property ? dashify(property) : util.id)\n            ?.meta(\n                'utilities',\n                property || util.id,\n                undefined,\n                Object.keys(map).indexOf(util.rest) + 1\n            );\n}\n\n/** @reference https://git.io/JuD04 **/\nexport const escape =\n    typeof CSS !== 'undefined' && CSS.escape\n        ? CSS.escape\n        : (ident: string) =>\n              ident.replace(\n                  /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g, // eslint-disable-line no-control-regex\n                  (ch, asCodePoint) => {\n                      if (asCodePoint) {\n                          // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n                          if (ch === '\\0') {\n                              return '\\uFFFD';\n                          }\n\n                          // Control characters and (dependent upon position) numbers get escaped as code points\n                          return (\n                              ch.slice(0, -1) +\n                              '\\\\' +\n                              ch.charCodeAt(ch.length - 1).toString(16) +\n                              ' '\n                          );\n                      }\n\n                      // Other potentially-special ASCII characters get backslash-escaped\n                      return '\\\\' + ch;\n                  }\n              );\n\nexport const css = (strings: TemplateStringsArray, ...args: unknown[]) =>\n    strings.reduce(\n        (acc, currentString, index) =>\n            acc + currentString + (args[index] || ''),\n        ''\n    );\n\nexport function deepExtend(out: any, ...args: any[]) {\n    out = out || {};\n\n    for (const obj of args) {\n        if (!obj) continue;\n\n        for (const [key, value] of Object.entries(obj)) {\n            if (typeof value === 'object') {\n                if (Array.isArray(value))\n                    if (out[key]) out[1] = [...out[key], ...value.slice(0)];\n                    else out[key] = value.slice(0);\n                else out[key] = deepExtend(out[key], value);\n            } else out[key] = value;\n        }\n    }\n\n    return out;\n}\nexport function rgb2hex(r: number, g: number, b: number) {\n    let sr = r.toString(16),\n        sg = g.toString(16),\n        sb = b.toString(16);\n\n    if (sr.length == 1) sr = '0' + r;\n    if (sg.length == 1) sg = '0' + g;\n    if (sb.length == 1) sb = '0' + b;\n\n    return '#' + sr + sg + sb;\n}\n\nexport function hex2rgb(h: string) {\n    let r = '',\n        g = '',\n        b = '';\n\n    // 3 digits\n    if (h.length == 4) {\n        r = h[1] + h[1];\n        g = h[2] + h[2];\n        b = h[3] + h[3];\n\n        // 6 digits\n    } else if (h.length == 7) {\n        r = h[1] + h[2];\n        g = h[3] + h[4];\n        b = h[5] + h[6];\n    }\n\n    return {r: parseInt(r, 16), g: parseInt(g, 16), b: parseInt(b, 16)};\n}\n\nexport function hsl2rgb(h: number, s: number, l: number) {\n    // Must be fractions of 1\n    s /= 100;\n    l /= 100;\n\n    const c = (1 - Math.abs(2 * l - 1)) * s,\n        x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\n        m = l - c / 2;\n    let r = 0,\n        g = 0,\n        b = 0;\n\n    if (0 <= h && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    } else if (60 <= h && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    } else if (120 <= h && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    } else if (180 <= h && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    } else if (240 <= h && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    } else if (300 <= h && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n\n    return {r, g, b};\n}\n\nexport function rgb2hsl(r: number, g: number, b: number) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    const cmin = Math.min(r, g, b),\n        cmax = Math.max(r, g, b),\n        delta = cmax - cmin;\n    let h = 0,\n        s = 0,\n        l = 0;\n    // Calculate hue\n    // No difference\n    if (delta == 0) h = 0;\n    // Red is max\n    else if (cmax == r) h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax == g) h = (b - r) / delta + 2;\n    // Blue is max\n    else h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n\n    // Make negative hues positive behind 360°\n    if (h < 0) h += 360;\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    return {h, s, l};\n}\n\nexport function hsl2hex(h: number, s: number, l: number) {\n    const {r, g, b} = hsl2rgb(h, s, l);\n    return rgb2hex(r, g, b);\n}\n\nexport function hex2hsl(hex: string) {\n    const {r, g, b} = hex2rgb(hex);\n    return rgb2hsl(r, g, b);\n}\n","import {variantOrder} from './order';\nimport type {Config} from './interfaces';\nimport defaultPlugin from './plugins';\nimport {hsl2hex} from './tools';\n\nconst colors: {[key: string]: string} = {};\n[\n    'red',\n    'dark-orange',\n    'orange',\n    'yellow',\n    'lime',\n    'bright-green',\n    'light-green',\n    'green',\n    'emerald',\n    'teal',\n    'light-blue',\n    'blue',\n    'indigo',\n    'violet',\n    'purple',\n    'fuchsia',\n    'hotpink',\n    'pink'\n].forEach((name, index) => (colors[name] = hsl2hex(index * 20, 100, 50)));\nexport const baseConfig: Config = {\n    // purge: [],\n    prefixer: true,\n    attributify: false,\n    darkMode: 'class', // or 'media'\n    theme: {\n        screens: {\n            sm: '640px',\n            md: '768px',\n            lg: '1024px',\n            xl: '1280px',\n            '2xl': '1536px'\n        },\n        colors,\n        inset: {}\n    },\n    variantOrder: variantOrder,\n    plugins: [defaultPlugin]\n};\n\nexport default baseConfig;\n","import type {PluginUtils} from '../interfaces';\nimport preflight from './preflight';\nimport utilities from './utilities';\nimport variants from './variants';\n\nexport default function defaultPlugin(utils: PluginUtils) {\n    utilities(utils);\n    variants(utils);\n    preflight(utils);\n}\n","import type {Plugin} from '../interfaces';\nimport {Block, dashify} from '../style';\n\nexport default (({\n    addBase: base,\n    addUtilities: add,\n    addComponents: component,\n    addDynamic: dynamic,\n    theme\n}) => {\n    function Value<P extends string, V extends string>(\n        values: V[],\n        property: P\n    ) {\n        add(\n            Object.fromEntries(\n                values.map(value => [\n                    `.${value}`,\n                    {[dashify(property)]: value} as {[key in P]: V}\n                ])\n            ),\n            {group: property}\n        );\n    }\n\n    function nameValue(values: string[], name: string, property = name) {\n        add(\n            Object.fromEntries(\n                values.map(value => [\n                    `.${name}-${value}`,\n                    {[dashify(property)]: value}\n                ])\n            ),\n            {group: property}\n        );\n    }\n\n    function nameMap(\n        map: Record<string, string>,\n        name: string,\n        property = name\n    ) {\n        add(\n            Object.fromEntries(\n                Object.entries(map).map(([value, css]) => [\n                    `.${name}-${value}`,\n                    {[dashify(property)]: css}\n                ])\n            ),\n            {group: property}\n        );\n    }\n\n    /** @category LAYOUT */\n\n    // https://tailwindcss.com/docs/container\n    component(\n        {\n            '.container': {\n                width: '100%',\n                paddingLeft:\n                    theme('container.padding.DEFAULT') ||\n                    theme('container.padding'),\n                paddingRight:\n                    theme('container.padding.DEFAULT') ||\n                    theme('container.padding'),\n                marginRight: theme('container.center') ? 'auto' : undefined,\n                marginLeft: theme('container.center') ? 'auto' : undefined,\n                ...Object.fromEntries(\n                    Object.entries(\n                        theme('container.screens') || theme('screens')\n                    ).map(([screen, size]) => [\n                        `@media (min-width: ${size})`,\n                        {\n                            width: size,\n                            paddingLeft: theme(`container.padding.${screen}`),\n                            paddingRight: theme(`container.padding.${screen}`)\n                        } as Block\n                    ])\n                )\n            }\n        },\n        {group: 'container'}\n    );\n\n    // https://tailwindcss.com/docs/box-decoration-break\n    nameValue(['slice', 'clone'], 'decoration', 'boxDecorationBreak');\n\n    // https://tailwindcss.com/docs/box-sizing\n    nameMap(\n        {\n            border: 'border-box',\n            content: 'content-box'\n        },\n        'box',\n        'boxSizing'\n    );\n\n    // https://tailwindcss.com/docs/display\n    add(\n        Object.fromEntries(\n            [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden'\n            ].map(value => [\n                '.' + value,\n                {display: value === 'hidden' ? 'none' : value}\n            ])\n        ),\n        {group: 'display'}\n    );\n\n    // https://tailwindcss.com/docs/float\n    nameValue(['right', 'left', 'none'], 'float');\n\n    // https://tailwindcss.com/docs/clear\n    nameValue(['left', 'right', 'both', 'none'], 'clear');\n\n    // https://tailwindcss.com/docs/isolation\n    add(\n        {\n            '.isolate': {\n                isolation: 'isolate'\n            },\n            '.isolation-auto': {\n                isolation: 'auto'\n            }\n        },\n        {group: 'isolation'}\n    );\n\n    // https://tailwindcss.com/docs/object-fit\n    nameValue(['contain', 'cover', 'fill', 'none', 'scale-down'], 'objectFit');\n\n    // https://tailwindcss.com/docs/object-position\n    dynamic('object', utility =>\n        utility\n            .body(theme('objectPosition'))\n            .string(value => value.split('-').join(' '))\n            .property('object-position')\n            ?.meta('utilities', 'objectPosition')\n    );\n\n    // https://tailwindcss.com/docs/overflow\n    const overflow = ['auto', 'hidden', 'visible', 'scroll'];\n    nameValue(overflow, 'overflow');\n    nameValue(overflow, 'overflow-x');\n    nameValue(overflow, 'overflow-y');\n\n    // https://tailwindcss.com/docs/position\n    Value(['static', 'fixed', 'absolute', 'relative', 'sticky'], 'position');\n\n    // https://tailwindcss.com/docs/top-right-bottom-left\n    dynamic('top|right|bottom|left|inset(-x|-y)?', utility =>\n        utility\n            .body(theme('inset'))\n            .sqb()\n            .spacing()\n            .ratio()\n            .dimension()\n            .variable()\n            .callback(() => {\n                switch (utility.id) {\n                    case 'top':\n                    case 'right':\n                    case 'bottom':\n                    case 'left':\n                        return utility\n                            .property(utility.id)\n                            ?.meta('utilities', 'inset', undefined, 4);\n                    case 'inset-x':\n                        return utility\n                            .property(['right', 'left'])\n                            ?.meta('utilities', 'inset', undefined, 3);\n                    case 'inset-y':\n                        return utility\n                            .property(['top', 'bottom'])\n                            ?.meta('utilities', 'inset', undefined, 2);\n                    case 'inset':\n                        return utility\n                            .property(['top', 'right', 'bottom', 'left'])\n                            ?.meta('utilities', 'inset', undefined, 1);\n                }\n            })\n    );\n\n    // https://tailwindcss.com/docs/visibility\n    add(\n        {\n            '.visible': {visibility: 'visible'},\n            '.invisible': {visibility: 'hidden'}\n        },\n        {group: 'visibility'}\n    );\n\n    // https://tailwindcss.com/docs/z-index\n    dynamic('z', utility =>\n        utility\n            .body(theme('zIndex'))\n            .int()\n            .variable()\n            .property('z-index')\n            ?.meta('utilities', 'zIndex')\n    );\n\n    dynamic('bg', utility =>\n        utility\n            .color(\n                theme('backgroundColor') || theme('colors'),\n                ({r, g, b}) => `rgba(${r},${g},${b},var(--mh-bg-opacity))`\n            )\n            .sqb()\n            .variable()\n            .css({'--mh-bg-opacity': '1', backgroundColor: utility.value})\n            ?.map(style => style.meta('utilities', 'backgroundColor'))\n    );\n\n    dynamic('h|w', utility => {\n        const name = utility.id === 'w' ? 'width' : 'height';\n        return utility\n            .body(theme(name))\n            .sqb()\n            .spacing()\n            .ratio()\n            .dimension()\n            .nxl(number => `${(number - 3) * 8 + 48}rem`)\n            .variable()\n            .property(name)\n            ?.meta('utilities', name, undefined);\n    });\n\n    dynamic('space-(x|y)', utility =>\n        utility\n            .body(theme('space'))\n            .sqb()\n            .spacing()\n            .dimension()\n            .variable()\n            .css(\n                utility.match[1] === 'x'\n                    ? {\n                          '--tw-space-x-reverse': '0',\n                          'margin-right': `calc(${utility.value} * var(--tw-space-x-reverse))`,\n                          'margin-left': `calc(${utility.value} * calc(1 - var(--tw-space-x-reverse)))`\n                      }\n                    : {\n                          '--tw-space-y-reverse': '0',\n                          'margin-top': `calc(${utility.value} * calc(1 - var(--tw-space-y-reverse)))`,\n                          'margin-bottom': `calc(${utility.value} * var(--tw-space-y-reverse))`\n                      }\n            )\n            ?.map(style => {\n                style.selectors = style.selectors.map(\n                    selector => selector + '> :not([hidden]) ~ :not([hidden])'\n                );\n                return style.meta(\n                    'utilities',\n                    'space',\n                    undefined,\n                    (utility.match[1] === 'x' ? 2 : 1) +\n                        (utility.isNegative ? 2 : 0)\n                );\n            })\n    );\n\n    dynamic('grid-(cols|rows)', utility => {\n        const type = utility.match[1] === 'cols' ? 'columns' : 'rows';\n        const group =\n            type === 'rows' ? 'gridTemplateRows' : 'gridTemplateColumns';\n\n        return (\n            utility\n                .body(theme(group))\n                .sqb()\n                .string(value => (value === 'none' ? value : undefined))\n                .property(`grid-template-${type}`)\n                ?.meta('utilities', group, undefined, 1) ||\n            utility\n                .int()\n                .variable()\n                .property(\n                    `grid-template-${type}`,\n                    value => `repeat(${value}, minmax(0, 1fr))`\n                )\n                ?.meta('utilities', group, undefined, 2)\n        );\n    });\n}) as Plugin;\n","import type {Plugin} from '../interfaces';\n\nexport default (({addBase, theme}) => {\n    addBase({\n        '*,::before,::after': {\n            boxSizing: 'border-box',\n            borderWidth: '0',\n            borderStyle: 'solid',\n            borderColor: 'currentColor'\n        },\n        html: {\n            lineHeight: 1.5,\n            WebkitTextSizeAdjust: '100%',\n            MozTabSize: '4',\n            tabSize: 4,\n            fontFamily: theme(\n                'fontFamily.sans',\n                `ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"`\n            )\n        },\n        body: {\n            margin: '0',\n            lineHeight: 'inherit'\n        },\n        hr: {\n            height: '0',\n            color: 'inherit',\n            borderTopWidth: '1px'\n        },\n        'abbr[title]': {\n            textDecoration: 'underline dotted'\n        },\n        'h1,h2,h3,h4,h5,h6': {\n            fontSize: 'inherit',\n            fontWeight: 'inherit'\n        },\n        a: {\n            color: 'inherit',\n            textDecoration: 'inherit'\n        },\n        'b,strong': {\n            fontWeight: 'bolder'\n        },\n        'code,kbd,samp,pre': {\n            fontFamily: theme(\n                'fontFamily.mono',\n                `ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace`\n            ),\n            fontSize: '1em'\n        },\n        small: {\n            fontSize: '80%'\n        },\n        'sub,sup': {\n            fontSize: '75%',\n            lineHeight: 0,\n            position: 'relative',\n            verticalAlign: 'baseline'\n        },\n        sub: {\n            bottom: '-0.25em'\n        },\n        sup: {\n            top: '-0.5em'\n        },\n        table: {\n            textIndent: '0',\n            borderColor: 'inherit',\n            borderCollapse: 'collapse'\n        },\n        'button,input,optgroup,select,textarea': {\n            fontFamily: 'inherit',\n            fontSize: '100%',\n            lineHeight: 'inherit',\n            color: 'inherit',\n            margin: '0',\n            padding: '0'\n        },\n        'button,select': {\n            textTransform: 'none'\n        },\n        \"button,[type='button'],[type='reset'],[type='submit']\": {\n            WebkitAppearance: 'button',\n            backgroundColor: 'transparent',\n            backgroundImage: 'none'\n        },\n        ':-moz-focusring': {\n            outline: 'auto'\n        },\n        ':-moz-ui-invalid': {\n            boxShadow: 'none'\n        },\n        progress: {\n            verticalAlign: 'baseline'\n        },\n        '::-webkit-inner-spin-button,::-webkit-outer-spin-button': {\n            height: 'auto'\n        },\n        \"[type='search']\": {\n            WebkitAppearance: 'textfield',\n            outlineOffset: '-2px'\n        },\n        '::-webkit-search-decoration': {\n            WebkitAppearance: 'none'\n        },\n        '::-webkit-file-upload-button': {\n            WebkitAppearance: 'button',\n            font: 'inherit'\n        },\n        summary: {\n            display: 'list-item'\n        },\n        'blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre': {\n            margin: '0'\n        },\n        fieldset: {\n            margin: '0',\n            padding: '0'\n        },\n        legend: {\n            padding: '0'\n        },\n        'ol,ul': {\n            listStyle: 'none',\n            margin: '0',\n            padding: '0'\n        },\n        textarea: {\n            resize: 'vertical'\n        },\n        'input::placeholder,textarea::placeholder': {\n            opacity: 1,\n            color: \"theme('colors.gray.400', #9ca3af)\"\n        },\n        'button,[role=\"button\"]': {\n            cursor: 'pointer'\n        },\n        'img,svg,video,canvas,audio,iframe,embed,object': {\n            display: 'block',\n            verticalAlign: 'middle'\n        },\n        'img,video': {\n            maxWidth: '100%',\n            height: 'auto'\n        },\n        '[hidden]': {\n            display: 'none'\n        }\n    });\n}) as Plugin;\n","import type {Output} from './interfaces';\nimport {Block, Declaration, parseCSS, Style} from './style';\nimport {escape, hex2hsl, hex2rgb, hsl2rgb} from './tools';\n\nexport class Utility {\n    colors: {[key: string]: string};\n    original: string;\n    raw: string;\n    important = false;\n    isNegative = false;\n    id = '';\n    rest = '';\n    match: RegExpMatchArray = [];\n    value?: string = '';\n    variants: {id: string; match: RegExpMatchArray}[] = [];\n    constructor(raw: string, colors = {}) {\n        this.colors = colors;\n        this.original = raw; // -!placeholder-real-gray-300\n        this.raw = raw.replace(/^(!-?|-!?)/, match => {\n            this.important = match !== '-';\n            this.isNegative = match !== '!';\n            return '';\n        }); // placeholder-real-gray-300\n    }\n    matchPlugin(expression: string) {\n        const match = this.raw.match(`^${expression}`);\n        if (match) {\n            this.id = match[0];\n            this.rest =\n                (this.isNegative ? '-' : '') +\n                this.raw.slice(match[0].length + 1);\n            this.match = match;\n            return true;\n        }\n    }\n    matchVariant(expression: string) {\n        const match = this.raw.match(`^${expression}:`);\n        if (match) {\n            this.variants.push({id: expression, match});\n            this.raw = this.raw.slice(match[0].length);\n            return true;\n        }\n    }\n    get className() {\n        return '.' + escape(this.original); // .-placeholder-real-gray-300\n    }\n    static<T>(\n        map: {[key: string]: T} = {},\n        callback = (value: T | string) => value + ''\n    ) {\n        if (!this.value)\n            if ((this.raw || 'DEFAULT') in map)\n                this.value = callback(map[this.raw || 'DEFAULT']);\n        return this;\n    }\n    body<T>(\n        map: {[key: string]: T} = {},\n        callback = (value: T | string) => value + ''\n    ) {\n        if (!this.value)\n            if ((this.rest || 'DEFAULT') in map) {\n                this.value = callback(map[this.rest || 'DEFAULT']);\n            }\n        return this;\n    }\n    string(\n        callback: (value: string) => string | undefined = (value: string) =>\n            value + ''\n    ) {\n        if (!this.value) this.value = callback(this.rest);\n        return this;\n    }\n    int(callback = (value: number) => value + '') {\n        if (!this.value && /^-?\\d+$/.test(this.rest))\n            this.value = callback(+this.rest);\n        return this;\n    }\n    number(callback = (value: number) => value + '') {\n        if (!this.value && /^-?(\\d+(\\.\\d+)?)+$/.test(this.rest))\n            this.value = callback(+this.rest);\n        return this;\n    }\n    dimension(callback = (value: string) => value + '') {\n        if (!this.value && /^(\\d+(\\.\\d+)?)+\\w+$/.test(this.rest))\n            this.value = callback(this.rest);\n        return this;\n    }\n    percentage(callback = (value: number) => value + '') {\n        if (!this.value && /^-?(\\d+(\\.\\d+)?)+%$/.test(this.rest))\n            this.value = callback(+this.rest);\n        return this;\n    }\n    ratio(callback = (a: number, b: number) => (a / b) * 100 + '%') {\n        if (!this.value) {\n            const match = this.rest.match(/^(-?\\d+)\\/(-?\\d+)$/);\n            if (match) this.value = callback(+match[1], +match[2]);\n        }\n        return this;\n    }\n    color(\n        map: {[key: string]: string} = this.colors,\n        callback = ({r, g, b}: {r: number; g: number; b: number}) =>\n            `rgba(${r},${g},${b},var(--mh-opacity));)`\n    ) {\n        if (!this.value)\n            if ((this.rest || 'DEFAULT') in map) {\n                const value = hex2rgb(map[this.rest || 'DEFAULT']);\n                if (value) this.value = callback(value);\n            } else if (/^\\w+-\\d+$/.test(this.rest)) {\n                const match = this.rest.match(\n                    /^(\\w+)-(\\d+)$/\n                ) as RegExpMatchArray;\n                if (match[1] in map) {\n                    const hsl = hex2hsl(map[match[1]]);\n                    hsl.l = 100 - (+match[2] * 7) / 90;\n                    this.value = callback(hsl2rgb(hsl.h, hsl.s, hsl.l));\n                }\n            }\n        return this;\n    }\n    nxl(callback = (value: number) => value + '') {\n        if (!this.value && /^-?\\d*xl$/.test(this.rest))\n            this.value = callback(this.rest === 'xl' ? 1 : +this.rest);\n        return this;\n    }\n    sqb(callback = (value: string) => value) {\n        if (!this.value) {\n            const match = this.rest.match(/\\[(.+)\\]$/)?.[1];\n            if (match) this.value = callback(match.replace(/_/g, ' '));\n        }\n        return this;\n    }\n    spacing() {\n        return this.number(number =>\n            number === 0 ? '0px' : number / 4 + 'rem'\n        );\n    }\n    variable(callback = (value: string) => `var(--${value})`) {\n        if (!this.value) {\n            const match = this.rest.match(/^\\$([\\w-]+)$/)?.[1];\n            if (match) this.value = callback(match);\n        }\n        return this;\n    }\n    callback(func: (value: string) => Output) {\n        if (!this.value) return;\n        return func(this.value);\n    }\n    property(property: string | string[], callback = (value: string) => value) {\n        if (this.value)\n            return new Style(\n                this.className,\n                Array.isArray(property)\n                    ? property.map(\n                          prop =>\n                              new Declaration(\n                                  prop,\n                                  callback(this.value as string)\n                              )\n                      )\n                    : new Declaration(property, callback(this.value))\n            );\n    }\n    style(callback: (value: string) => Declaration | Declaration[]) {\n        if (this.value) return new Style(this.className, callback(this.value));\n    }\n\n    css(styles: Block) {\n        if (this.value) return parseCSS(this.className, styles);\n    }\n}\n","import {baseConfig} from './config';\nimport type {\n    Config,\n    UtilityGenerator,\n    PluginUtils,\n    VariantGenerator,\n    PluginUtilOptions,\n    Block,\n    Container,\n    CSS\n} from './interfaces';\nimport {parseCSS, Style, StyleSheet} from './style';\nimport {deepExtend, escape} from './tools';\nimport {Utility} from './util';\n\nexport class Processor {\n    staticPlugins: Map<\n        string,\n        {className: string; css: Block; options: PluginUtilOptions}\n    > = new Map();\n    preflighPlugins: Container[] = [];\n    dynamicPlugins: Map<string, UtilityGenerator> = new Map();\n    _variants: Map<string, VariantGenerator> = new Map();\n    count = 0;\n    cache: Set<string> = new Set();\n    _config: Config;\n    pluginUtils: PluginUtils = {\n        addDynamic: (key, generator, options) =>\n            this.addDynamic(key, generator, options),\n        addUtilities: (utilities, options) =>\n            this.addUtilities(utilities, options),\n        addComponents: (utilities, options) =>\n            this.addComponents(utilities, options),\n        addBase: utilities => this.addBase(utilities),\n        addVariant: (name, generator) => this.addVariant(name, generator),\n        e: ident => escape(ident),\n        prefix: selector => this.prefix(selector),\n        theme: (path, defaultValue) => this.theme(path, defaultValue),\n        config: (path, defaultValue) => this.config(path, defaultValue),\n        variants: (path, defaultValue) => this.variants(path, defaultValue)\n    };\n\n    constructor(config: Config = {}) {\n        this._config = this.resolveConfig(config);\n        for (const plugin of this._config.plugins ?? []) {\n            plugin(this.pluginUtils);\n        }\n    }\n\n    resolveConfig(config: Config): Config {\n        return deepExtend({}, baseConfig, config);\n    }\n\n    extract(className: string): Container[] | undefined {\n        const utility = new Utility(className);\n        let matched = true;\n        let styles: Container[] | undefined;\n        if (this._config.prefix)\n            className = className.replace(\n                new RegExp(`^${this._config.prefix}`),\n                ''\n            );\n        while (matched) {\n            matched = false;\n            for (const [variant] of this._variants) {\n                if (utility.matchVariant(variant)) matched = true;\n            }\n        }\n        for (const [expr, {className: realClass, css, options}] of this\n            .staticPlugins) {\n            if (\n                new RegExp(expr).test(\n                    escape((utility.isNegative ? '-' : '') + utility.raw)\n                )\n            ) {\n                const newClass = realClass.replace(\n                    '.' + escape((utility.isNegative ? '-' : '') + utility.raw),\n                    '.' + escape(className)\n                );\n                styles = parseCSS(\n                    options.respectPrefix ? this.prefix(newClass) : newClass,\n                    css\n                );\n                if (options.respectImportant && this._config.important)\n                    styles.forEach(style => (style.important = true));\n                styles = styles.map(style =>\n                    style.meta(\n                        options.layer,\n                        options.group,\n                        options.order,\n                        options.offset\n                    )\n                );\n                break;\n            }\n        }\n        if (!styles)\n            for (const [expr, generator] of this.dynamicPlugins) {\n                if (utility.matchPlugin(expr)) {\n                    const style = generator(utility, this.pluginUtils);\n                    if (style) {\n                        styles = Array.isArray(style) ? style : [style];\n                        break;\n                    }\n                }\n            }\n\n        if (styles) {\n            for (const variant of utility.variants) {\n                styles.forEach(style => {\n                    if (style instanceof Style) {\n                        style._meta.variants.push(variant.id);\n                        (this._variants.get(variant.id) as VariantGenerator)({\n                            style\n                        });\n                    }\n                });\n            }\n            if (utility.important)\n                styles.forEach(style => (style.important = true));\n\n            return styles;\n        }\n    }\n\n    interpret(classNames: string) {\n        const classes = classNames.split(/\\s+/g);\n        const success: string[] = [];\n        const ignored: string[] = [];\n        const styleSheet = new StyleSheet();\n        for (const className of classes) {\n            if (!this.cache.has(className)) {\n                const result = this.extract(className);\n                if (result) {\n                    success.push(className);\n                    styleSheet.add(...result);\n                    this.cache.add(className);\n                } else ignored.push(className);\n            }\n        }\n        styleSheet.variantOrder = this._config.variantOrder ?? [];\n        return {\n            success,\n            ignored,\n            styleSheet\n        };\n    }\n\n    preflight() {\n        return this.preflighPlugins;\n    }\n\n    e = escape;\n\n    prefix(selector: string): string {\n        return selector.replace(/(?=[\\w])/, this._config.prefix ?? '');\n    }\n\n    config<T>(path: string, defaultValue?: T): T {\n        try {\n            const value =\n                new Function('_', `return _.${path}`)(this._config) ||\n                defaultValue;\n            return value;\n        } catch {\n            return defaultValue as T;\n        }\n    }\n\n    theme<T>(path: string, defaultValue?: T): T {\n        return this.config(`theme.${path}`, defaultValue);\n    }\n\n    variants(path: string, defaultValue?: string[]) {\n        return Array.from(this._variants.keys());\n    }\n\n    private addStatic(\n        className: string,\n        utility: Block,\n        options: PluginUtilOptions\n    ) {\n        options = {\n            layer: 'utilities',\n            variants: [],\n            respectPrefix: true,\n            respectImportant: true,\n            ...options\n        };\n\n        options.order = options.group ? undefined : this.count++;\n\n        const classes = className.match(/\\.(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+/gu);\n\n        if (classes)\n            this.staticPlugins.set(\n                '^' + classes.map(cls => cls.slice(1)).join('$|^') + '$',\n                {className, css: utility, options}\n            );\n    }\n\n    addUtilities(\n        utils: CSS | CSS[],\n        options: string[] | PluginUtilOptions = {}\n    ) {\n        if (Array.isArray(options)) options = {variants: options};\n        options = {\n            layer: 'utilities',\n            variants: [],\n            respectPrefix: true,\n            respectImportant: true,\n            ...options\n        };\n        let offset = 0; // set offset\n        const addCSS = (utils: CSS) => {\n            for (const [className, styles] of Object.entries(utils)) {\n                this.addStatic(className, styles, {\n                    ...(options as PluginUtilOptions),\n                    offset: offset++\n                });\n            }\n        };\n        if (Array.isArray(utils)) utils.forEach(util => addCSS(util));\n        else addCSS(utils);\n    }\n    addComponents(\n        utils: CSS | CSS[],\n        options: string[] | PluginUtilOptions = {}\n    ) {\n        if (Array.isArray(options)) options = {variants: options};\n        return this.addUtilities(utils, {layer: 'components', ...options});\n    }\n    addBase(utils: CSS | CSS[], options: string[] | PluginUtilOptions = {}) {\n        if (Array.isArray(options)) options = {variants: options};\n        options = {\n            layer: 'base',\n            variants: [],\n            respectPrefix: true,\n            respectImportant: true,\n            ...options\n        };\n        let offset = 0; // set offset\n\n        const addCSS = (utils: CSS) => {\n            for (const [className, styles] of Object.entries(utils)) {\n                const css = parseCSS(className, styles).map(style =>\n                    style.meta(\n                        (options as PluginUtilOptions).layer,\n                        (options as PluginUtilOptions).group,\n                        (options as PluginUtilOptions).order || this.count++,\n                        offset++\n                    )\n                );\n                this.preflighPlugins.push(...css);\n            }\n        };\n        if (Array.isArray(utils)) utils.forEach(util => addCSS(util));\n        else addCSS(utils);\n    }\n\n    addDynamic(\n        name: string,\n        generator: UtilityGenerator,\n        options: PluginUtilOptions = {}\n    ) {\n        options = {\n            layer: 'utilities',\n            variants: [],\n            respectPrefix: true,\n            respectImportant: true,\n            ...options\n        };\n        this.dynamicPlugins.set(name, (util, tools) => {\n            const styles = generator(util, tools);\n            if (styles) {\n                if (Array.isArray(styles))\n                    styles.forEach(style => {\n                        style.meta(\n                            options.layer,\n                            options.group,\n                            options.order,\n                            undefined\n                        );\n                        if (options.respectImportant && this._config.important)\n                            style.important = true;\n                    });\n                else {\n                    styles.meta(\n                        options.layer,\n                        options.group,\n                        styles._meta.order ||\n                            (options.group ? undefined : this.count++),\n                        undefined\n                    );\n                    if (options.respectImportant && this._config.important)\n                        styles.important = true;\n                }\n                return styles;\n            }\n        });\n    }\n\n    addVariant(name: string, generator: VariantGenerator) {\n        if (!this._config.variantOrder?.includes(name))\n            this._config.variantOrder?.push(name);\n        this._variants.set(name, generator);\n    }\n}\n\nexport default Processor;\n"],"names":["pluginOrder","layerOrder","Declaration","property","value","important","this","build","Style","selectors","style","_this","prepend","append","atRules","nodes","Array","isArray","selectorText","map","selector","_this2","join","split","clone","_meta","css","undefined","decl","_this3","forEach","rule","layer","order","offset","variants","meta","plugin","node","StyleSheet","layers","variantOrder","add","_this5","variant","DEFAULT","push","buildGroup","styles","sort","a","b","buildVariant","_this6","_this7","IMPORTANT","UNITLESS","dashify","str","replace","toLowerCase","parent","name","propValue","indexOf","toString","test","parseCSS","obj","root","output","Object","entries","parts","match","sty","styleForBreakpoint","mediaConditions","raw","min","max","filter","Boolean","sortWeight","breakpoint","parseInt","Number","NEGATIVE_INFINITY","escape","CSS","ident","ch","asCodePoint","slice","charCodeAt","length","deepExtend","out","key","hex2rgb","h","r","g","hsl2rgb","s","l","c","Math","abs","x","m","round","colors","index","sr","sg","sb","baseConfig","prefixer","attributify","darkMode","theme","screens","sm","md","lg","xl","inset","plugins","utils","addVariant","breakpoints","base","addUtilities","dynamic","addDynamic","nameValue","values","fromEntries","group","component","addComponents","width","paddingLeft","paddingRight","marginRight","marginLeft","screen","size","border","content","display","isolation","utility","body","string","_utility$body$string$","overflow","Value","sqb","spacing","ratio","dimension","variable","callback","id","_utility$property","_utility$property2","_utility$property3","_utility$property4","visibility","_utility$body$int$var","color","backgroundColor","_utility$color$sqb$va","nxl","number","_utility$body$sqb$spa","_utility$body$sqb$spa2","isNegative","type","_utility$int$variable","utilities","sizeB","nextSize","pseudo","includes","at","dot","addBase","boxSizing","borderWidth","borderStyle","borderColor","html","lineHeight","WebkitTextSizeAdjust","MozTabSize","tabSize","fontFamily","margin","hr","height","borderTopWidth","textDecoration","fontSize","fontWeight","small","position","verticalAlign","sub","bottom","sup","top","table","textIndent","borderCollapse","padding","textTransform","WebkitAppearance","backgroundImage","outline","boxShadow","progress","outlineOffset","font","summary","fieldset","legend","listStyle","textarea","resize","opacity","cursor","maxWidth","preflight","Utility","original","rest","matchPlugin","expression","matchVariant","percentage","hsl","cmin","cmax","delta","toFixed","rgb2hsl","_this$rest$match","_this$rest$match2","func","className","prop","Processor","config","staticPlugins","Map","preflighPlugins","dynamicPlugins","_variants","count","cache","Set","_config","pluginUtils","generator","options","e","prefix","path","defaultValue","resolveConfig","extract","matched","RegExp","realClass","newClass","respectPrefix","respectImportant","get","interpret","classNames","classes","success","ignored","styleSheet","has","result","Function","from","keys","addStatic","set","cls","addCSS","util","_this4","tools","_this$_config$variant2"],"mappings":"y0CAgEYA,EAFCC,EAAa,CAAC,OAAQ,aAAc,YAAa,cAE9D,SAAYD,GACRA,+BACAA,uBACAA,mCACAA,mCACAA,mCACAA,uCACAA,uCACAA,iCACAA,qDACAA,yCACAA,4CACAA,4CACAA,kDACAA,gDACAA,kDACAA,8CACAA,0CACAA,8CACAA,0CACAA,oCACAA,uCACAA,sCACAA,oCACAA,oCACAA,kDACAA,gCACAA,0BACAA,oCACAA,kCACAA,4BACAA,wCACAA,8BACAA,kCACAA,qCACAA,gCACAA,kCACAA,sCACAA,gCACAA,sCACAA,0CACAA,oCACAA,sBACAA,8BACAA,iCACAA,wBACAA,wBACAA,wBACAA,kCACAA,kCACAA,0BACAA,8BACAA,kCACAA,gDACAA,uCACAA,0BACAA,gCACAA,8BACAA,gCACAA,8BACAA,gCACAA,0CACAA,4BACAA,4BACAA,6BACAA,kDACAA,4BACAA,8CACAA,kDACAA,kCACAA,sCACAA,4BACAA,wCACAA,8BACAA,wBACAA,0BACAA,gCACAA,0CACAA,+BACAA,4CACAA,4CACAA,gCACAA,oCACAA,sBACAA,0BACAA,oCACAA,4CACAA,8CACAA,oCACAA,gCACAA,+BACAA,oCACAA,sCACAA,kCACAA,gCACAA,wCACAA,oDACAA,sDACAA,oDACAA,wDACAA,sDACAA,0CACAA,kCACAA,4CACAA,4CACAA,4BACAA,wCACAA,kDACAA,wCACAA,kCACAA,uCACAA,kCACAA,kDACAA,kCACAA,gCACAA,oCACAA,4BACAA,wBACAA,0BACAA,gCACAA,oBACAA,sCACAA,oDACAA,4CACAA,iCACAA,6CACAA,yCACAA,+CACAA,uCACAA,6BACAA,uCACAA,mCACAA,iCACAA,6CACAA,wBACAA,2BACAA,iCACAA,uBACAA,qCACAA,iDACAA,mDACAA,+DACAA,mDACAA,6CACAA,iCACAA,iCACAA,2CACAA,sCACAA,qDACAA,2BACAA,uBACAA,mCACAA,+BACAA,mCACAA,iCACAA,iCACAA,2BACAA,8BACAA,yBACAA,2CACAA,uCACAA,mDACAA,+CACAA,iDACAA,iDACAA,2CACAA,6CACAA,8CACAA,yCAxKJ,CAAYA,IAAAA,WCxCCE,aAIT,WAAYC,EAAkBC,EAAeC,YAAAA,IAAAA,GAAY,QAHzDF,qBACAC,kBACAC,iBAEIC,KAAKH,SAAWA,EAChBG,KAAKF,MAAQA,EACbE,KAAKD,UAAYA,qBAGrBE,MAAA,WACI,YAAeJ,aAAYG,KAAKF,OAC5BE,KAAKD,UAAY,aAAe,UA0C/BG,sBAMT,WACIC,EACAC,yBADAD,IAAAA,EAA+B,aAC/BC,IAAAA,EAAqC,KAErCC,sBATJF,UAAsB,KACtBG,QAAoB,KACpBC,OAAmB,KACnBC,QAAoB,KACpBC,aAMQC,MAAMC,QAAQR,GAAYE,EAAKF,UAAYA,IACrCS,aAAaT,GACvBE,EAAKI,MAAQC,MAAMC,QAAQP,GAASA,EAAQ,CAACA,qFAbrD,2BAgBIQ,aAAA,SAAaA,cACT,IAAIA,cAEYT,UACPU,IACG,SAAAC,YACOC,EAAKT,QAAQU,KAAK,IAAMF,EAAWC,EAAKR,OAAOS,KAC9C,MAGXA,KAAK,KATIhB,KAAKG,UAAYS,EAAaK,MAAM,cAY1DC,MAAA,SACIf,EACAM,YADAN,IAAAA,YAAmCH,KAAKG,qBACxCM,IAAAA,YAAyCT,KAAKS,QAE9C,IAAML,EAAQ,IAAIF,EAAMC,EAAWM,GAGnC,OAFAL,EAAMI,kBAAcR,KAAKQ,SACzBJ,EAAMe,WAAYnB,KAAKmB,OAChBf,KAGXH,MAAA,sBACQmB,EAASpB,KAAKY,kBAAaS,OAAcrB,KAAKS,MAC7CI,IAAI,SAAAS,GAED,OADIC,EAAKxB,YAAWuB,EAAKvB,WAAY,GAC9BuB,EAAKrB,UAEfe,KAAK,SAEV,OADAhB,KAAKQ,QAAQgB,QAAQ,SAAAC,UAASL,EAASK,MAAQL,QACxCA,iBA1EX,WAAYX,YAAAA,IAAAA,EAAqC,SATjDA,kBACAU,MAAc,CACVO,MAAO,aACPC,MAAO,EACPC,OAAQ,EACRC,SAAU,SAEd9B,WAAY,EAGRC,KAAKS,MAAQA,EAXrB,2BAcIqB,KAAA,SACIJ,EACAK,EACAJ,EACAC,EACAC,GAUA,gBAdAH,IAAAA,EAAQ1B,KAAKmB,MAAMO,gBAEnBC,IAAAA,EAAQ3B,KAAKmB,MAAMQ,gBACnBC,IAAAA,EAAS5B,KAAKmB,MAAMS,iBACpBC,IAAAA,EAAW7B,KAAKmB,MAAMU,UAEtB7B,KAAKmB,MAAQ,CACTO,MAAAA,EACAC,MAAOI,EACDrC,EAAYqC,GACZJ,EACNC,OAAAA,EACAC,SAAAA,WAKR5B,MAAA,WACI,YAAYQ,MAAMI,IAAI,SAAAmB,UAAQA,EAAK/B,UAASe,KAAK,WAsE5CiB,aAGT,kBAFAC,OAAsB,QACtBC,aAAyB,GAF7B,2BAIIC,IAAA,sBACI,yBAAOZ,QAAQ,SAAApB,GAKX,IAJA,MAAIsB,EACAW,EAAKH,OAAO9B,EAAMe,MAAMO,SACvBW,EAAKH,OAAO9B,EAAMe,MAAMO,OAAS,QAEhBtB,EAAMe,MAAMU,yBAAU,KAAjCS,UACPZ,EAASA,EAAMY,KACVZ,EAAMY,GAAW,KAExBZ,EAAMa,UAAYb,EAAMa,QAAU,KAAqBC,KACrDpC,QAIZqC,WAAA,SAAWC,GACP,OAAOA,EACDA,EACKC,KACG,SAACC,EAAcC,UACXD,EAAEzB,MAAMQ,MAAQkB,EAAE1B,MAAMQ,OACxBiB,EAAEzB,MAAMS,OAASiB,EAAE1B,MAAMS,SAEhCf,IAAI,SAAAT,GACD,OAAOA,EAAMH,UAEhBe,KAAK,IACV,MAEV8B,aAAA,SAAaX,EAAwBN,cACjC,OAAOA,EACD7B,KAAKyC,WAAWZ,EAASU,SACrBJ,EACKtB,IAAI,SAAAyB,UACDS,EAAKD,aACDX,EACAN,EAASS,MAGhBtB,KAAK,IACd,MAEVf,MAAA,SAAMkC,cACF,gBADEA,IAAAA,EAAenC,KAAKmC,cACfxC,EACFkB,IAAI,SAAAa,UAASsB,EAAKF,aAAaX,EAAca,EAAKd,OAAOR,MACzDV,KAAK,UAGZiC,EAAY,qBAEZC,EAAW,CACb,WACA,iBACA,eACA,OACA,YACA,gBACA,cACA,gBACA,cACA,aACA,cACA,UACA,QACA,UACA,WACA,SACA,UACA,OACA,eACA,oBACA,iBACA,yBAGYC,EAAQC,GACpB,OAAOA,EACFC,QAAQ,WAAY,OACpBA,QAAQ,OAAQ,QAChBC,cAGT,SAAShC,EAAKiC,EAAeC,EAAc1D,GACvC0D,EAAOL,EAAQK,GACf,IAAIC,EAAY,GACZ1D,GAAY,EACZD,MAAAA,IACsB,iBAAVA,EAER2D,EADU,IAAV3D,GAAeoD,EAASQ,QAAQF,IAAS,EAC7B1D,EAAM6D,WACL7D,EAAQ,KAClBmD,EAAUW,KAAK9D,IACtB2D,EAAY3D,EAAMuD,QAAQJ,EAAW,IACrClD,GAAY,GACT0D,EAAY3D,EAEnByD,EAAO9C,MAAM+B,KAAK,IAAI5C,EAAY4D,EAAMC,EAAW1D,cAGvC8D,EAASN,EAAgBO,EAAYC,GAC5CA,IAAMA,EAAO,IAAI7D,EAAMqD,IAG5B,IADA,IAAMS,EAAS,CAACD,SACYE,OAAOC,QAAQJ,kBAAM,CAA5C,WAAON,OAAM1D,OACd,GAAIA,MAAAA,KAEmB,MAAZ0D,EAAK,eACZ,IAAMW,EAAQX,EAAKY,MACf,4BAEAD,IACoB,iBAATrE,GAAsBY,MAAMC,QAAQb,IAC3CkE,EAAOxB,WAAPwB,EACOH,EACCN,EACAzD,EACAiE,EAAK7C,WAAMG,EAAW,KACxBR,IAAI,SAAAwD,GAEF,OADAA,EAAI7D,QAAQgC,SAAS2B,EAAM,OAAMA,EAAM,IAChCE,iBAIhB3D,MAAMC,QAAQb,GACrB,cAAgBA,kBACZwB,EAAKyC,EAAMP,mBAES,iBAAV1D,EAAoB,CAClC,IAAMgB,EACU,MAAZ0C,EAAK,GACCA,EAAKH,QAAQ,KAAME,GAChBA,MAAUC,EAAKH,QAAQ,KAAME,GAC1CS,EAAOxB,WAAPwB,EAAeH,EAASN,EAAQzD,EAAOiE,EAAK7C,MAAMJ,EAAU,WAE5DQ,EAAKyC,EAAMP,EAAM1D,GAGzB,OAAOkE,ECjHX,SAASM,EAAmB7C,GACxB,IAAM8C,EACF,QAAS9C,EACHA,EAAK+C,IACL,CACI/C,EAAKgD,oBAAsBhD,EAAKgD,QAChChD,EAAKiD,oBAAsBjD,EAAKiD,SAE/BC,OAAOC,SACP5D,KAAK,SACpB,4BAASZ,MAAiBI,QAAQgC,eAAe+B,IAKrD,SAASM,EAAWC,GAChB,MAA6B,iBAAfA,EACRC,SAASD,GACTE,OAAOC,sBCtIJC,EACM,oBAARC,KAAuBA,IAAID,OAC5BC,IAAID,OACJ,SAACE,UACGA,EAAM/B,QACF,+CACA,SAACgC,EAAIC,GACD,OAAIA,EAEW,OAAPD,EACO,IAKPA,EAAGE,MAAM,GAAI,GACb,KACAF,EAAGG,WAAWH,EAAGI,OAAS,GAAG9B,SAAS,IACtC,IAKD,KAAO0B,cAWpBK,EAAWC,GACvBA,EAAMA,GAAO,GAEb,yDAAwB,KAAb7B,UACP,GAAKA,EAEL,cAA2BG,OAAOC,QAAQJ,kBAAM,CAA3C,WAAO8B,OAAK9F,OACQ,iBAAVA,EACHY,MAAMC,QAAQb,GACV6F,EAAIC,GAAMD,EAAI,aAASA,EAAIC,GAAS9F,EAAMyF,MAAM,IAC/CI,EAAIC,GAAO9F,EAAMyF,MAAM,GAC3BI,EAAIC,GAAOF,EAAWC,EAAIC,GAAM9F,GAClC6F,EAAIC,GAAO9F,GAI1B,OAAO6F,WAcKE,EAAQC,GACpB,IAAIC,EAAI,GACJC,EAAI,GACJnD,EAAI,GAeR,OAZgB,GAAZiD,EAAEL,QACFM,EAAID,EAAE,GAAKA,EAAE,GACbE,EAAIF,EAAE,GAAKA,EAAE,GACbjD,EAAIiD,EAAE,GAAKA,EAAE,IAGM,GAAZA,EAAEL,SACTM,EAAID,EAAE,GAAKA,EAAE,GACbE,EAAIF,EAAE,GAAKA,EAAE,GACbjD,EAAIiD,EAAE,GAAKA,EAAE,IAGV,CAACC,EAAGhB,SAASgB,EAAG,IAAKC,EAAGjB,SAASiB,EAAG,IAAKnD,EAAGkC,SAASlC,EAAG,cAGnDoD,EAAQH,EAAWI,EAAWC,GAE1CD,GAAK,IACLC,GAAK,IAEL,IAAMC,GAAK,EAAIC,KAAKC,IAAI,EAAIH,EAAI,IAAMD,EAClCK,EAAIH,GAAK,EAAIC,KAAKC,IAAMR,EAAI,GAAM,EAAK,IACvCU,EAAIL,EAAIC,EAAI,EACZL,EAAI,EACJC,EAAI,EACJnD,EAAI,EA+BR,OA7BI,GAAKiD,GAAKA,EAAI,IACdC,EAAIK,EACJJ,EAAIO,EACJ1D,EAAI,GACG,IAAMiD,GAAKA,EAAI,KACtBC,EAAIQ,EACJP,EAAII,EACJvD,EAAI,GACG,KAAOiD,GAAKA,EAAI,KACvBC,EAAI,EACJC,EAAII,EACJvD,EAAI0D,GACG,KAAOT,GAAKA,EAAI,KACvBC,EAAI,EACJC,EAAIO,EACJ1D,EAAIuD,GACG,KAAON,GAAKA,EAAI,KACvBC,EAAIQ,EACJP,EAAI,EACJnD,EAAIuD,GACG,KAAON,GAAKA,EAAI,MACvBC,EAAIK,EACJJ,EAAI,EACJnD,EAAI0D,GAMD,CAACR,EAJRA,EAAIM,KAAKI,MAAgB,KAATV,EAAIS,IAITR,EAHXA,EAAIK,KAAKI,MAAgB,KAATT,EAAIQ,IAGN3D,EAFdA,EAAIwD,KAAKI,MAAgB,KAAT5D,EAAI2D,KC/KxB,IAAME,EAAkC,GACxC,CACI,MACA,cACA,SACA,SACA,OACA,eACA,cACA,QACA,UACA,OACA,aACA,OACA,SACA,SACA,SACA,UACA,UACA,QACFlF,QAAQ,SAACgC,EAAMmD,UAAWD,EAAOlD,IDmFAwC,KAsHbC,ECzMqC,GAARU,EAAY,IAAK,KDyMtDX,EAtHgCnD,IAsH7BA,EArHT+D,GADgBb,IAsHbA,GArHIpC,SAAS,IAChBkD,EAAKb,EAAErC,SAAS,IAChBmD,EAAKjE,EAAEc,SAAS,IAEH,GAAbiD,EAAGnB,SAAamB,EAAK,IAAMb,GACd,GAAbc,EAAGpB,SAAaoB,EAAK,IAAMb,GACd,GAAbc,EAAGrB,SAAaqB,EAAK,IAAMjE,GAExB,IAAM+D,EAAKC,EAAKC,SATHf,EAAWC,EAAWnD,EACtC+D,EACAC,EACAC,QCrFKC,EAAqB,CAE9BC,UAAU,EACVC,aAAa,EACbC,SAAU,QACVC,MAAO,CACHC,QAAS,CACLC,GAAI,QACJC,GAAI,QACJC,GAAI,SACJC,GAAI,SACJ,MAAO,UAEXd,OAAAA,EACAe,MAAO,IAEXtF,aJzCwB,CACxB,QACA,QACA,SACA,UACA,OACA,SACA,gBACA,eACA,UACA,cACA,UACA,WACA,UACA,gBACA,UACA,QACA,WACA,WACA,oBACA,YACA,aACA,eACA,gBACA,oBACA,eACA,mBACA,QACA,OACA,YACA,WACA,aACA,iBACA,eACA,mBACA,OACA,MACA,eACA,cACA,OACA,QACA,SACA,QACA,eACA,aACA,YACA,MACA,MACA,WACA,WACA,UACA,MACA,MACA,cACA,cACA,eACA,gBACA,cACA,iBIhBAuF,QAAS,UCtCyBC,SHCpBC,EAAYT,EACpBU,eIHGC,IAoCLjI,EAnCUuC,IAAd2F,aAEYC,IAAZC,WACAd,IAAAA,MAiBA,SAASe,EAAUC,EAAkB3E,EAAc3D,YAAAA,IAAAA,EAAW2D,GAC1DpB,EACI6B,OAAOmE,YACHD,EAAOtH,IAAI,SAAAf,eAAS,KACZ0D,MAAQ1D,UACVqD,EAAQtD,IAAYC,SAG9B,CAACuI,MAAOxI,KAuBhByI,IAlDAC,eAmDI,CACI,gBACIC,MAAO,OACPC,YACItB,EAAM,8BACNA,EAAM,qBACVuB,aACIvB,EAAM,8BACNA,EAAM,qBACVwB,YAAaxB,EAAM,oBAAsB,YAAS9F,EAClDuH,WAAYzB,EAAM,oBAAsB,YAAS9F,GAC9C4C,OAAOmE,YACNnE,OAAOC,QACHiD,EAAM,sBAAwBA,EAAM,YACtCtG,IAAI,gBAAEgI,OAAQC,aAAU,uBACAA,MACtB,CACIN,MAAOM,EACPL,YAAatB,uBAA2B0B,GACxCH,aAAcvB,uBAA2B0B,UAM7D,CAACR,MAAO,cAIZH,EAAU,CAAC,QAAS,SAAU,aAAc,gCA9CxCrI,EAuDA,eAvDAA,EAsDA,OApDAuC,EACI6B,OAAOmE,YACHnE,OAAOC,QA8Cf,CACI6E,OAAQ,aACRC,QAAS,gBAhDenI,IAAI,kBAASO,aAAS,sBAEpC+B,EAAQtD,IAAYuB,SAG9B,CAACiH,MAAOxI,IAkDhBuC,EACI6B,OAAOmE,YACH,CACI,QACA,eACA,SACA,OACA,cACA,QACA,eACA,gBACA,aACA,eACA,qBACA,qBACA,qBACA,kBACA,YACA,YACA,OACA,cACA,WACA,YACA,UACFvH,IAAI,SAAAf,SAAS,CACX,IAAMA,EACN,CAACmJ,QAAmB,WAAVnJ,EAAqB,OAASA,OAGhD,CAACuI,MAAO,YAIZH,EAAU,CAAC,QAAS,OAAQ,QAAS,SAGrCA,EAAU,CAAC,OAAQ,QAAS,OAAQ,QAAS,SAG7C9F,EACI,CACI,WAAY,CACR8G,UAAW,WAEf,kBAAmB,CACfA,UAAW,SAGnB,CAACb,MAAO,cAIZH,EAAU,CAAC,UAAW,QAAS,OAAQ,OAAQ,cAAe,aAG9DF,EAAQ,SAAU,SAAAmB,yBACdA,EACKC,KAAKjC,EAAM,mBACXkC,OAAO,SAAAvJ,UAASA,EAAMmB,MAAM,KAAKD,KAAK,OACtCnB,SAAS,2BAHdyJ,EAIMxH,KAAK,YAAa,oBAI5B,IAAMyH,EAAW,CAAC,OAAQ,SAAU,UAAW,UAC/CrB,EAAUqB,EAAU,YACpBrB,EAAUqB,EAAU,cACpBrB,EAAUqB,EAAU,cA5JpB,SACIpB,EACAtI,GAEAuC,EACI6B,OAAOmE,YA0JT,CAAC,SAAU,QAAS,WAAY,WAAY,UAzJ/BvH,IAAI,SAAAf,eAAS,KACZA,UACFqD,EAAQtD,IAAYC,SAG9B,CAACuI,MAAOxI,IAoJhB2J,CAAM,EAAuD,YAG7DxB,EAAQ,sCAAuC,SAAAmB,UAC3CA,EACKC,KAAKjC,EAAM,UACXsC,MACAC,UACAC,QACAC,YACAC,WACAC,SAAS,uBACN,OAAQX,EAAQY,IACZ,IAAK,MACL,IAAK,QACL,IAAK,SACL,IAAK,OACD,gBAAOZ,EACFtJ,SAASsJ,EAAQY,YADfC,EAEDlI,KAAK,YAAa,aAAST,EAAW,GAChD,IAAK,UACD,gBAAO8H,EACFtJ,SAAS,CAAC,QAAS,iBADjBoK,EAEDnI,KAAK,YAAa,aAAST,EAAW,GAChD,IAAK,UACD,gBAAO8H,EACFtJ,SAAS,CAAC,MAAO,mBADfqK,EAEDpI,KAAK,YAAa,aAAST,EAAW,GAChD,IAAK,QACD,gBAAO8H,EACFtJ,SAAS,CAAC,MAAO,QAAS,SAAU,iBADlCsK,EAEDrI,KAAK,YAAa,aAAST,EAAW,QAMhEe,EACI,CACI,WAAY,CAACgI,WAAY,WACzB,aAAc,CAACA,WAAY,WAE/B,CAAC/B,MAAO,eAIZL,EAAQ,IAAK,SAAAmB,yBACTA,EACKC,KAAKjC,EAAM,iBAEX0C,WACAhK,SAAS,mBAJdwK,EAKMvI,KAAK,YAAa,YAG5BkG,EAAQ,KAAM,SAAAmB,yBACVA,EACKmB,MACGnD,EAAM,oBAAsBA,EAAM,UAClC,4BAAEpB,QAAGC,QAAGnD,6BAEX4G,MACAI,WACAzI,IAAI,CAAC,kBAAmB,IAAKmJ,gBAAiBpB,EAAQrJ,gBAP3D0K,EAQM3J,IAAI,SAAAT,UAASA,EAAM0B,KAAK,YAAa,uBAG/CkG,EAAQ,MAAO,SAAAmB,SACL3F,EAAsB,MAAf2F,EAAQY,GAAa,QAAU,SAC5C,gBAAOZ,EACFC,KAAKjC,EAAM3D,IACXiG,MACAC,UACAC,QACAC,YACAa,IAAI,SAAAC,UAA4B,GAAdA,EAAS,GAAS,WACpCb,WACAhK,SAAS2D,WARPmH,EASD7I,KAAK,YAAa0B,OAAMnC,KAGlC2G,EAAQ,cAAe,SAAAmB,yBACnBA,EACKC,KAAKjC,EAAM,UACXsC,MACAC,UACAE,YACAC,WACAzI,IACwB,MAArB+H,EAAQ/E,MAAM,GACR,CACI,uBAAwB,IACxB,uBAAwB+E,EAAQrJ,sCAChC,sBAAuBqJ,EAAQrJ,iDAEnC,CACI,uBAAwB,IACxB,qBAAsBqJ,EAAQrJ,gDAC9B,wBAAyBqJ,EAAQrJ,gDAhBnD8K,EAmBM/J,IAAI,SAAAT,GAIF,OAHAA,EAAMD,UAAYC,EAAMD,UAAUU,IAC9B,SAAAC,UAAYA,EAAW,sCAEpBV,EAAM0B,KACT,YACA,aACAT,GACsB,MAArB8H,EAAQ/E,MAAM,GAAa,EAAI,IAC3B+E,EAAQ0B,WAAa,EAAI,QAK9C7C,EAAQ,mBAAoB,SAAAmB,WAClB2B,EAA4B,SAArB3B,EAAQ/E,MAAM,GAAgB,UAAY,OACjDiE,EACO,SAATyC,EAAkB,mBAAqB,sBAE3C,gBACI3B,EACKC,KAAKjC,EAAMkB,IACXoB,MACAJ,OAAO,SAAAvJ,SAAoB,SAAVA,EAAmBA,OAAQuB,IAC5CxB,0BAA0BiL,aACzBhJ,KAAK,YAAauG,OAAOhH,EAAW,eAC1C8H,QAEKU,WACAhK,0BACoBiL,EACjB,SAAAhL,mBAAmBA,gCAL3BiL,EAOMjJ,KAAK,YAAauG,OAAOhH,EAAW,MDzSlD2J,CAAUrD,GHAIC,KGCLD,GHDKC,WAAYT,IAAAA,OACpBU,EAAc5D,OAAOC,QACvBiD,EAAM,YACRxE,KAAK,kBAAesI,cAAWpG,QAAoBA,EAAWoG,MAEpDzJ,QAAQ,WAAemF,OAAbnD,OAAMsF,OACxB,GAAoB,iBAATA,EAAmB,CAC1B,IAASoC,GAAYrD,EAAYlB,EAAQ,IAAM,OAC/CiB,EAAWpE,EAAMc,EAAmB,CAACG,IAAKqE,KAC1ClB,MACQpE,EACJc,EAAmB,CACfI,IAAKoE,EAAKzF,QACN,qBACA,SAAAvD,UAAUA,EAAQ,GAAM,QAIpC8H,MACQpE,EACJc,EACI4G,EACM,CACIzG,IAAKqE,EACLpE,IAAMwG,EAAoB7H,QACtB,qBACA,SAAAvD,UAAUA,EAAQ,GAAM,MAGhC,CAAC2E,IAAKqE,KAGpBlB,MAAepE,EAAQc,EAAmB,CAACI,IAAKoE,KAChDlB,QACUpE,EACNc,EACI4G,EACM,CAACzG,IAAKqE,EAAMpE,IAAKwG,GACjB,CAACzG,IAAKqE,UAIpBlB,EAAWpE,EAAMc,EAAmBwE,MAQ5C,CACI,SACA,WACA,UACA,UACA,WACA,QACA,UAEA,QACA,gBACA,aACA,SACA,QACA,gBACA,eACA,QACA,gBACA,WACA,UAEA,OACA,eACA,OACA,OACA,aACA,eACA,WACA,eACA,YACA,aACA,WACA,QACA,OACA,QACA,SACA,QACA,WACFtH,QAAQ,SAAA2J,GACNvD,EAAWuD,EAAQ,qBAAE/K,MACXG,OAAOiC,MACH,CAAC,QAAS,QAAQ4I,SAASD,GAC3BA,EAAS,aAOvBvD,EAAW,OAASuD,EAAQ,qBAAE/K,MACpBG,OAAOiC,cAAc2I,SAM/BvD,EAAW,SAAWuD,EAAQ,qBAAE/K,MACtBE,QAAQkC,cAAc2I,WAQpC,CACI,QACA,WACA,SACA,eACA,aACA,SACA,cACA,aACF3J,QAAQ,SAAA2J,GACNvD,EAAWuD,EAAQ,qBAAE/K,MAAiBG,OAAOiC,KAAK,KAAO2I,OAE7D,CAAC,OAAQ,OAAO3J,QAAQ,SAAA2J,GACpBvD,EAAWuD,EAAQ,qBAAE/K,MACXG,OAAOiC,kBAAkB2I,WAGvC,CAAC,OAAQ,OAAO3J,QAAQ,SAAA2J,GACpBvD,EAAWuD,EAAQ,qBAAE/K,MACXG,OAAOiC,oBAAoB2I,WAIzCvD,EAAW,MAAO,qBAAExH,MAAiBG,OAAOiC,KAAK,UACjDoF,EAAW,MAAO,qBAAExH,MAAiBG,OAAOiC,KAAK,QACjDoF,EAAW,WAAY,qBAAExH,MAAiBG,OAAOiC,KAAK,UACtDoF,EAAW,WAAY,qBAAExH,MAAiBG,OAAOiC,KAAK,UACtDoF,EAAW,UAAW,qBAAExH,MAAiBG,OAAOiC,KAAK,UAErDoF,EAAW,MAAO,qBAAExH,MAAiBG,OAAOiC,KAAK,kBACjDoF,EAAW,MAAO,qBAAExH,MAAiBG,OAAOiC,KAAK,kBAIjDoF,EAAW,cAAe,qBAAExH,MAClBI,QAAQgC,KAAK,oDAEvBoF,EAAW,gBAAiB,qBAAExH,MACpBI,QAAQgC,KAAK,6CAEvB,CAAC,OAAQ,SAAShB,QAAQ,SAAAsJ,GACtB,IAAMO,EAAuB,qBAAEjL,MACjBI,QAAQgC,sCAAsCsI,QACxDQ,EAAwB,qBAAElL,MAChBE,QAAQkC,SAASsI,QAC/BlD,EAAW,IAAMkD,EAAMO,GACvBzD,EAAW,IAAMkD,EAAMQ,GACvB1D,EAAWkD,EAA4B,UAAtB3D,EAAM,YAA0BkE,EAAKC,qBKtKnCnE,IAAAA,OACvBoE,IADcA,SACN,CACJ,qBAAsB,CAClBC,UAAW,aACXC,YAAa,IACbC,YAAa,QACbC,YAAa,gBAEjBC,KAAM,CACFC,WAAY,IACZC,qBAAsB,OACtBC,WAAY,IACZC,QAAS,EACTC,WAAY9E,EACR,sOAIRiC,KAAM,CACF8C,OAAQ,IACRL,WAAY,WAEhBM,GAAI,CACAC,OAAQ,IACR9B,MAAO,UACP+B,eAAgB,OAEpB,cAAe,CACXC,eAAgB,oBAEpB,oBAAqB,CACjBC,SAAU,UACVC,WAAY,WAEhB5J,EAAG,CACC0H,MAAO,UACPgC,eAAgB,WAEpB,WAAY,CACRE,WAAY,UAEhB,oBAAqB,CACjBP,WAAY9E,EACR,wHAGJoF,SAAU,OAEdE,MAAO,CACHF,SAAU,OAEd,UAAW,CACPA,SAAU,MACVV,WAAY,EACZa,SAAU,WACVC,cAAe,YAEnBC,IAAK,CACDC,OAAQ,WAEZC,IAAK,CACDC,IAAK,UAETC,MAAO,CACHC,WAAY,IACZtB,YAAa,UACbuB,eAAgB,YAEpB,wCAAyC,CACrCjB,WAAY,UACZM,SAAU,OACVV,WAAY,UACZvB,MAAO,UACP4B,OAAQ,IACRiB,QAAS,KAEb,gBAAiB,CACbC,cAAe,QAEnB,wDAAyD,CACrDC,iBAAkB,SAClB9C,gBAAiB,cACjB+C,gBAAiB,QAErB,kBAAmB,CACfC,QAAS,QAEb,mBAAoB,CAChBC,UAAW,QAEfC,SAAU,CACNd,cAAe,YAEnB,0DAA2D,CACvDP,OAAQ,QAEZ,kBAAmB,CACfiB,iBAAkB,YAClBK,cAAe,QAEnB,8BAA+B,CAC3BL,iBAAkB,QAEtB,+BAAgC,CAC5BA,iBAAkB,SAClBM,KAAM,WAEVC,QAAS,CACL3E,QAAS,aAEb,qDAAsD,CAClDiD,OAAQ,KAEZ2B,SAAU,CACN3B,OAAQ,IACRiB,QAAS,KAEbW,OAAQ,CACJX,QAAS,KAEb,QAAS,CACLY,UAAW,OACX7B,OAAQ,IACRiB,QAAS,KAEba,SAAU,CACNC,OAAQ,YAEZ,2CAA4C,CACxCC,QAAS,EACT5D,MAAO,qCAEX,yBAA0B,CACtB6D,OAAQ,WAEZ,iDAAkD,CAC9ClF,QAAS,QACT0D,cAAe,UAEnB,YAAa,CACTyB,SAAU,OACVhC,OAAQ,QAEZ,WAAY,CACRnD,QAAS,UF1IjBoF,CAAU1G,MGJD2G,aAWT,WAAY9J,EAAakC,uBAAAA,IAAAA,EAAS,SAVlCA,mBACA6H,qBACA/J,gBACAzE,WAAY,OACZ8K,YAAa,OACbd,GAAK,QACLyE,KAAO,QACPpK,MAA0B,QAC1BtE,MAAiB,QACjB+B,SAAoD,GAEhD7B,KAAK0G,OAASA,EACd1G,KAAKuO,SAAW/J,EAChBxE,KAAKwE,IAAMA,EAAInB,QAAQ,aAAc,SAAAe,GAGjC,OAFA/D,EAAKN,UAAsB,MAAVqE,EACjB/D,EAAKwK,WAAuB,MAAVzG,EACX,KAjBnB,6BAoBIqK,YAAA,SAAYC,GACR,IAAMtK,EAAQpE,KAAKwE,IAAIJ,UAAUsK,GACjC,GAAItK,EAMA,OALApE,KAAK+J,GAAK3F,EAAM,GAChBpE,KAAKwO,MACAxO,KAAK6K,WAAa,IAAM,IACzB7K,KAAKwE,IAAIe,MAAMnB,EAAM,GAAGqB,OAAS,GACrCzF,KAAKoE,MAAQA,QAIrBuK,aAAA,SAAaD,GACT,IAAMtK,EAAQpE,KAAKwE,IAAIJ,UAAUsK,OACjC,GAAItK,EAGA,OAFApE,KAAK6B,SAASW,KAAK,CAACuH,GAAI2E,EAAYtK,MAAAA,IACpCpE,KAAKwE,IAAMxE,KAAKwE,IAAIe,MAAMnB,EAAM,GAAGqB,qBAO3C,SACI5E,EACAiJ,GAKA,gBANAjJ,IAAAA,EAA0B,aAC1BiJ,IAAAA,EAAW,SAAChK,UAAsBA,EAAQ,KAErCE,KAAKF,QACDE,KAAKwE,KAAO,aAAc3D,IAC3Bb,KAAKF,MAAQgK,EAASjJ,EAAIb,KAAKwE,KAAO,qBAGlD4E,KAAA,SACIvI,EACAiJ,GAMA,gBAPAjJ,IAAAA,EAA0B,aAC1BiJ,IAAAA,EAAW,SAAChK,UAAsBA,EAAQ,KAErCE,KAAKF,QACDE,KAAKwO,MAAQ,aAAc3N,IAC5Bb,KAAKF,MAAQgK,EAASjJ,EAAIb,KAAKwO,MAAQ,qBAInDnF,OAAA,SACIS,GAIA,gBAJAA,IAAAA,EAAkD,SAAChK,UAC/CA,EAAQ,KAEPE,KAAKF,QAAOE,KAAKF,MAAQgK,EAAS9J,KAAKwO,mBAGhD,SAAI1E,GAGA,gBAHAA,IAAAA,EAAW,SAAChK,UAAkBA,EAAQ,MACjCE,KAAKF,OAAS,UAAU8D,KAAK5D,KAAKwO,QACnCxO,KAAKF,MAAQgK,GAAU9J,KAAKwO,eAGpC9D,OAAA,SAAOZ,GAGH,gBAHGA,IAAAA,EAAW,SAAChK,UAAkBA,EAAQ,MACpCE,KAAKF,OAAS,qBAAqB8D,KAAK5D,KAAKwO,QAC9CxO,KAAKF,MAAQgK,GAAU9J,KAAKwO,eAGpC5E,UAAA,SAAUE,GAGN,gBAHMA,IAAAA,EAAW,SAAChK,UAAkBA,EAAQ,MACvCE,KAAKF,OAAS,sBAAsB8D,KAAK5D,KAAKwO,QAC/CxO,KAAKF,MAAQgK,EAAS9J,KAAKwO,eAGnCI,WAAA,SAAW9E,GAGP,gBAHOA,IAAAA,EAAW,SAAChK,UAAkBA,EAAQ,MACxCE,KAAKF,OAAS,sBAAsB8D,KAAK5D,KAAKwO,QAC/CxO,KAAKF,MAAQgK,GAAU9J,KAAKwO,eAGpC7E,MAAA,SAAMG,GACF,YADEA,IAAAA,EAAW,SAAClH,EAAWC,UAAeD,EAAIC,EAAK,IAAM,OAClD7C,KAAKF,MAAO,CACb,IAAMsE,EAAQpE,KAAKwO,KAAKpK,MAAM,sBAC1BA,IAAOpE,KAAKF,MAAQgK,GAAU1F,EAAM,IAAKA,EAAM,KAEvD,eAEJkG,MAAA,SACIzJ,EACAiJ,GAGA,YAJAjJ,IAAAA,EAA+Bb,KAAK0G,iBACpCoD,IAAAA,EAAW,4BAAE/D,QAAGC,QAAGnD,6BAGd7C,KAAKF,MACN,IAAKE,KAAKwO,MAAQ,aAAc3N,EAAK,CACjC,IAAMf,EAAQ+F,EAAQhF,EAAIb,KAAKwO,MAAQ,YACnC1O,IAAOE,KAAKF,MAAQgK,EAAShK,YAC1B,YAAY8D,KAAK5D,KAAKwO,MAAO,CACpC,IAAMpK,EAAQpE,KAAKwO,KAAKpK,MACpB,iBAEJ,GAAIA,EAAM,KAAMvD,EAAK,CACjB,IAAMgO,WLwEF9I,EAAWC,EAAWnD,GAE1CkD,GAAK,IACLC,GAAK,IACLnD,GAAK,IAGL,IAAMiM,EAAOzI,KAAK5B,IAAIsB,EAAGC,EAAGnD,GACxBkM,EAAO1I,KAAK3B,IAAIqB,EAAGC,EAAGnD,GACtBmM,EAAQD,EAAOD,EACfhJ,EAAI,EAEJK,EAAI,EAyBR,OAtBgBL,EAAH,GAATkJ,EAAgB,EAEXD,GAAQhJ,GAASC,EAAInD,GAAKmM,EAAS,EAEnCD,GAAQ/I,GAAQnD,EAAIkD,GAAKiJ,EAAQ,GAEhCjJ,EAAIC,GAAKgJ,EAAQ,GAE3BlJ,EAAIO,KAAKI,MAAU,GAAJX,IAGP,IAAGA,GAAK,KAEhBK,GAAK4I,EAAOD,GAAQ,EASb,CAAChJ,EAAAA,EAAGI,IAHD,KAHG,GAAT8I,EAAa,EAAIA,GAAS,EAAI3I,KAAKC,IAAI,EAAIH,EAAI,MAGpC8I,QAAQ,GAGT9I,EAFdA,IAAU,IAAJA,GAAS8I,QAAQ,IAYhBC,IADWrJ,EKtHkBhF,EAAIuD,EAAM,MLsHvC2B,IAAGC,IAAGnD,GKrHGgM,EAAI1I,EAAI,IAAmB,GAAX/B,EAAM,GAAU,GAChCpE,KAAKF,MAAQgK,EAAS7D,EAAQ4I,EAAI/I,EAAG+I,EAAI3I,EAAG2I,EAAI1I,WAG5D,eAEJsE,IAAA,SAAIX,GAGA,gBAHAA,IAAAA,EAAW,SAAChK,UAAkBA,EAAQ,MACjCE,KAAKF,OAAS,YAAY8D,KAAK5D,KAAKwO,QACrCxO,KAAKF,MAAQgK,EAAuB,OAAd9J,KAAKwO,KAAgB,GAAKxO,KAAKwO,eAG7D/E,IAAA,SAAIK,GACA,YADAA,IAAAA,EAAW,SAAChK,UAAkBA,KACzBE,KAAKF,MAAO,OACPsE,WAAQpE,KAAKwO,KAAKpK,MAAM,qBAAhB+K,EAA+B,GACzC/K,IAAOpE,KAAKF,MAAQgK,EAAS1F,EAAMf,QAAQ,KAAM,OAEzD,eAEJqG,QAAA,WACI,YAAYgB,OAAO,SAAAA,UACJ,IAAXA,EAAe,MAAQA,EAAS,EAAI,WAG5Cb,SAAA,SAASC,GACL,YADKA,IAAAA,EAAW,SAAChK,kBAA2BA,SACvCE,KAAKF,MAAO,OACPsE,WAAQpE,KAAKwO,KAAKpK,MAAM,wBAAhBgL,EAAkC,GAC5ChL,IAAOpE,KAAKF,MAAQgK,EAAS1F,IAErC,eAEJ0F,SAAA,SAASuF,GACL,GAAKrP,KAAKF,MACV,OAAOuP,EAAKrP,KAAKF,UAErBD,SAAA,SAASA,EAA6BiK,cAClC,YADkCA,IAAAA,EAAW,SAAChK,UAAkBA,IAC5DE,KAAKF,MACL,WAAWI,EACPF,KAAKsP,UACL5O,MAAMC,QAAQd,GACRA,EAASgB,IACL,SAAA0O,cACQ3P,EACA2P,EACAzF,EAAS/I,EAAKjB,UAG1B,IAAIF,EAAYC,EAAUiK,EAAS9J,KAAKF,YAG1DM,MAAA,SAAM0J,GACF,GAAI9J,KAAKF,MAAO,WAAWI,EAAMF,KAAKsP,UAAWxF,EAAS9J,KAAKF,WAGnEsB,IAAA,SAAIsB,GACA,GAAI1C,KAAKF,MAAO,OAAO+D,EAAS7D,KAAKsP,UAAW5M,6BA7HpD,WACI,MAAO,IAAMwC,EAAOlF,KAAKuO,wMC7BpBiB,aA2BT,WAAYC,uBAAAA,IAAAA,EAAiB,SA1B7BC,cAGI,IAAIC,SACRC,gBAA+B,QAC/BC,eAAgD,IAAIF,SACpDG,UAA2C,IAAIH,SAC/CI,MAAQ,OACRC,MAAqB,IAAIC,SACzBC,oBACAC,YAA2B,CACvBlI,WAAY,SAACrC,EAAKwK,EAAWC,UACzBhQ,EAAK4H,WAAWrC,EAAKwK,EAAWC,IACpCtI,aAAc,SAACiD,EAAWqF,UACtBhQ,EAAK0H,aAAaiD,EAAWqF,IACjC9H,cAAe,SAACyC,EAAWqF,UACvBhQ,EAAKkI,cAAcyC,EAAWqF,IAClC9E,QAAS,SAAAP,UAAa3K,EAAKkL,QAAQP,IACnCpD,WAAY,SAACpE,EAAM4M,UAAc/P,EAAKuH,WAAWpE,EAAM4M,IACvDE,EAAG,SAAAlL,UAASF,EAAOE,IACnBmL,OAAQ,SAAAzP,UAAYT,EAAKkQ,OAAOzP,IAChCqG,MAAO,SAACqJ,EAAMC,UAAiBpQ,EAAK8G,MAAMqJ,EAAMC,IAChDhB,OAAQ,SAACe,EAAMC,UAAiBpQ,EAAKoP,OAAOe,EAAMC,IAClD5O,SAAU,SAAC2O,EAAMC,UAAiBpQ,EAAKwB,SAAS2O,EAAMC,UAiH1DH,EAAIpL,EA7GAlF,KAAKkQ,QAAUlQ,KAAK0Q,cAAcjB,GAClC,uBAAqBzP,KAAKkQ,QAAQxI,WAAW,mBAAI,QAC7C3F,WAAO/B,KAAKmQ,cA9BxB,2BAkCIO,cAAA,SAAcjB,GACV,OAAO/J,EAAW,GAAIqB,EAAY0I,MAGtCkB,QAAA,SAAQrB,OAGA5M,SAFEyG,EAAU,IAAImF,EAAQgB,GACxBsB,GAAU,EAOd,IALI5Q,KAAKkQ,QAAQK,SACbjB,EAAYA,EAAUjM,QAClB,IAAIwN,WAAW7Q,KAAKkQ,QAAQK,QAC5B,KAEDK,GAAS,CACZA,GAAU,EACV,cAAwB5Q,KAAK8P,0BACrB3G,EAAQwF,2BAAuBiC,GAAU,GAGrD,4CAA8BE,IAAXxB,UAAsBlO,IAAAA,IAAKiP,IAAAA,QAE1C,GACI,IAAIQ,aAAajN,KACbsB,GAAQiE,EAAQ0B,WAAa,IAAM,IAAM1B,EAAQ3E,MAEvD,CACE,IAAMuM,EAAWD,EAAUzN,QACvB,IAAM6B,GAAQiE,EAAQ0B,WAAa,IAAM,IAAM1B,EAAQ3E,KACvD,IAAMU,EAAOoK,IAgBjB,OAdA5M,EAASmB,EACLwM,EAAQW,cAAgBjQ,EAAKwP,OAAOQ,GAAYA,EAChD3P,GAEAiP,EAAQY,kBAAoBlQ,EAAKmP,QAAQnQ,WACzC2C,EAAOlB,QAAQ,SAAApB,UAAUA,EAAML,WAAY,IAC/C2C,EAASA,EAAO7B,IAAI,SAAAT,UAChBA,EAAM0B,KACFuO,EAAQ3O,MACR2O,EAAQhI,MACRgI,EAAQ1O,MACR0O,EAAQzO,wBAtBmC5B,KACtD0P,8CA2BL,IAAKhN,EACD,cAAgC1C,KAAK6P,+BAAgB,eAAnCO,OACd,GAAIjH,EAAQsF,kBAAmB,CAC3B,IAAMrO,EAAQgQ,EAAUjH,EAASnJ,KAAKmQ,aACtC,GAAI/P,EAAO,CACPsC,EAAShC,MAAMC,QAAQP,GAASA,EAAQ,CAACA,GACzC,QAKhB,GAAIsC,EAAQ,CACR,2BAAWJ,UACPI,EAAOlB,QAAQ,SAAApB,GACPA,aAAiBF,IACjBE,EAAMe,MAAMU,SAASW,KAAKF,EAAQyH,IACjChJ,EAAK+O,UAAUoB,IAAI5O,EAAQyH,GAA3BhJ,CAAoD,CACjDX,MAAAA,YALM+I,EAAQtH,6BAa9B,OAHIsH,EAAQpJ,WACR2C,EAAOlB,QAAQ,SAAApB,UAAUA,EAAML,WAAY,IAExC2C,MAIfyO,UAAA,SAAUC,GAKN,YAJMC,EAAUD,EAAWnQ,MAAM,QAC3BqQ,EAAoB,GACpBC,EAAoB,GACpBC,EAAa,IAAIvP,MACCoP,kBAAS,KAAtB/B,UACP,IAAKtP,KAAKgQ,MAAMyB,IAAInC,GAAY,CAC5B,IAAMoC,EAAS1R,KAAK2Q,QAAQrB,GACxBoC,GACAJ,EAAQ9O,KAAK8M,GACbkC,EAAWpP,UAAXoP,EAAkBE,GAClB1R,KAAKgQ,MAAM5N,IAAIkN,IACZiC,EAAQ/O,KAAK8M,IAI5B,OADAkC,EAAWrP,sBAAenC,KAAKkQ,QAAQ/N,gBAAgB,GAChD,CACHmP,QAAAA,EACAC,QAAAA,EACAC,WAAAA,MAIRnD,UAAA,WACI,YAAYuB,mBAKhBW,OAAA,SAAOzP,SACH,OAAOA,EAASuC,QAAQ,oBAAYrD,KAAKkQ,QAAQK,UAAU,OAG/Dd,OAAA,SAAUe,EAAcC,GACpB,IAII,OAFI,IAAIkB,SAAS,gBAAiBnB,EAA9B,CAAsCxQ,KAAKkQ,UAC3CO,EAEN,SACE,OAAOA,MAIftJ,MAAA,SAASqJ,EAAcC,GACnB,YAAYhB,gBAAgBe,EAAQC,MAGxC5O,SAAA,SAAS2O,EAAcC,GACnB,OAAO/P,MAAMkR,KAAK5R,KAAK8P,UAAU+B,WAG7BC,UAAA,SACJxC,EACAnG,EACAkH,IAEAA,KACI3O,MAAO,YACPG,SAAU,GACVmP,eAAe,EACfC,kBAAkB,GACfZ,IAGC1O,MAAQ0O,EAAQhI,WAAQhH,EAAYrB,KAAK+P,QAEjD,IAAMsB,EAAU/B,EAAUlL,MAAM,kSAE5BiN,GACArR,KAAK0P,cAAcqC,IACf,IAAMV,EAAQxQ,IAAI,SAAAmR,UAAOA,EAAIzM,MAAM,KAAIvE,KAAK,OAAS,IACrD,CAACsO,UAAAA,EAAWlO,IAAK+H,EAASkH,QAAAA,OAItCtI,aAAA,SACIJ,EACA0I,uBAAAA,IAAAA,EAAwC,IAEpC3P,MAAMC,QAAQ0P,KAAUA,EAAU,CAACxO,SAAUwO,IACjDA,KACI3O,MAAO,YACPG,SAAU,GACVmP,eAAe,EACfC,kBAAkB,GACfZ,GAEP,IAAIzO,EAAS,EACPqQ,EAAS,SAACtK,GACZ,cAAkC1D,OAAOC,QAAQyD,kBAAQ,CAApD,WACDpG,EAAKuQ,yBACGzB,GACJzO,OAAQA,SAIhBlB,MAAMC,QAAQgH,GAAQA,EAAMnG,QAAQ,SAAA0Q,UAAQD,EAAOC,KAClDD,EAAOtK,MAEhBY,cAAA,SACIZ,EACA0I,GAGA,gBAHAA,IAAAA,EAAwC,IAEpC3P,MAAMC,QAAQ0P,KAAUA,EAAU,CAACxO,SAAUwO,SACrCtI,aAAaJ,KAAQjG,MAAO,cAAiB2O,OAE7D9E,QAAA,SAAQ5D,EAAoB0I,uBAAAA,IAAAA,EAAwC,IAC5D3P,MAAMC,QAAQ0P,KAAUA,EAAU,CAACxO,SAAUwO,IACjDA,KACI3O,MAAO,OACPG,SAAU,GACVmP,eAAe,EACfC,kBAAkB,GACfZ,GAEP,IAAIzO,EAAS,EAEPqQ,EAAS,SAACtK,GACZ,cAAkC1D,OAAOC,QAAQyD,kBAAQ,cAC/CvG,EAAMyC,aAA4BhD,IAAI,SAAAT,UACxCA,EAAM0B,KACDuO,EAA8B3O,MAC9B2O,EAA8BhI,MAC9BgI,EAA8B1O,OAASwQ,EAAKpC,QAC7CnO,UAGRuQ,EAAKvC,iBAAgBpN,aAAQpB,KAGjCV,MAAMC,QAAQgH,GAAQA,EAAMnG,QAAQ,SAAA0Q,UAAQD,EAAOC,KAClDD,EAAOtK,MAGhBM,WAAA,SACIzE,EACA4M,EACAC,uBAAAA,IAAAA,EAA6B,IAE7BA,KACI3O,MAAO,YACPG,SAAU,GACVmP,eAAe,EACfC,kBAAkB,GACfZ,GAEPrQ,KAAK6P,eAAekC,IAAIvO,EAAM,SAAC0O,EAAME,GACjC,IAAM1P,EAAS0N,EAAU8B,EAAME,GAC/B,GAAI1P,EAuBA,OAtBIhC,MAAMC,QAAQ+B,GACdA,EAAOlB,QAAQ,SAAApB,GACXA,EAAM0B,KACFuO,EAAQ3O,MACR2O,EAAQhI,MACRgI,EAAQ1O,WACRN,GAEAgP,EAAQY,kBAAoB5O,EAAK6N,QAAQnQ,YACzCK,EAAML,WAAY,MAG1B2C,EAAOZ,KACHuO,EAAQ3O,MACR2O,EAAQhI,MACR3F,EAAOvB,MAAMQ,QACR0O,EAAQhI,WAAQhH,EAAYgB,EAAK0N,cACtC1O,GAEAgP,EAAQY,kBAAoB5O,EAAK6N,QAAQnQ,YACzC2C,EAAO3C,WAAY,IAEpB2C,OAKnBkF,WAAA,SAAWpE,EAAc4M,oBAChBpQ,KAAKkQ,QAAQ/N,eAAbkQ,EAA2BjH,SAAS5H,kBAChC0M,QAAQ/N,iBAAcK,KAAKgB,GACpCxD,KAAK8P,UAAUiC,IAAIvO,EAAM4M"}