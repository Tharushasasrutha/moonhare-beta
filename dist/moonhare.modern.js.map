{"version":3,"file":"moonhare.modern.js","sources":["../src/order.ts","../src/style.ts","../src/plugins/variants.ts","../src/tools.ts","../src/config.ts","../src/plugins/index.ts","../src/plugins/utilities.ts","../src/plugins/preflight.ts","../src/util.ts","../src/index.ts"],"sourcesContent":["// TODO: add ['any-link', 'first-child', 'fullscreen', 'future', 'in-range', 'last-child', 'left', 'out-of-range', 'right', 'scope']\nexport const variantOrder = [\n    'hover',\n    'focus',\n    'active',\n    'visited',\n    'link',\n    'target',\n    'focus-visible',\n    'focus-within',\n    'checked',\n    'not-checked',\n    'default',\n    'disabled',\n    'enabled',\n    'indeterminate',\n    'invalid',\n    'valid',\n    'optional',\n    'required',\n    'placeholder-shown',\n    'read-only',\n    'read-write',\n    'not-disabled',\n    'first-of-type',\n    'not-first-of-type',\n    'last-of-type',\n    'not-last-of-type',\n    'first',\n    'last',\n    'not-first',\n    'not-last',\n    'only-child',\n    'not-only-child',\n    'only-of-type',\n    'not-only-of-type',\n    'even',\n    'odd',\n    'even-of-type',\n    'odd-of-type',\n    'root',\n    'empty',\n    'before',\n    'after',\n    'first-letter',\n    'first-line',\n    'selection',\n    'svg',\n    'all',\n    'children',\n    'siblings',\n    'sibling',\n    'ltr',\n    'rtl',\n    'group-hover',\n    'group-focus',\n    'group-active',\n    'group-visited',\n    'motion-safe',\n    'motion-reduce'\n];\n\nexport const layerOrder = ['base', 'components', 'shortcuts', 'utilities'];\n\nexport enum pluginOrder {\n    'container' = 100,\n    'space' = 200,\n    'divideWidth' = 300,\n    'divideColor' = 400,\n    'divideStyle' = 500,\n    'divideOpacity' = 600,\n    'accessibility' = 700,\n    'appearance' = 800,\n    'backgroundAttachment' = 900,\n    'backgroundClip' = 1000,\n    'backgroundColor' = 1100,\n    'backgroundImage' = 1200,\n    'gradientColorStops' = 1300,\n    'backgroundOpacity' = 1400,\n    'backgroundPosition' = 1500,\n    'backgroundRepeat' = 1600,\n    'backgroundSize' = 1700,\n    'backgroundOrigin' = 1750,\n    'borderCollapse' = 1800,\n    'borderColor' = 1900,\n    'borderOpacity' = 2000,\n    'borderRadius' = 2100,\n    'borderStyle' = 2200,\n    'borderWidth' = 2300,\n    'boxDecorationBreak' = 2350,\n    'boxSizing' = 2400,\n    'cursor' = 2500,\n    'captionSide' = 2550,\n    'emptyCells' = 2560,\n    'display' = 2600,\n    'flexDirection' = 2700,\n    'flexWrap' = 2800,\n    'placeItems' = 2900,\n    'placeContent' = 3000,\n    'placeSelf' = 3100,\n    'alignItems' = 3200,\n    'alignContent' = 3300,\n    'alignSelf' = 3400,\n    'justifyItems' = 3500,\n    'justifyContent' = 3600,\n    'justifySelf' = 3700,\n    'flex' = 3800,\n    'flexGrow' = 3900,\n    'flexShrink' = 4000,\n    'order' = 4100,\n    'float' = 4200,\n    'clear' = 4300,\n    'fontFamily' = 4400,\n    'fontWeight' = 4500,\n    'height' = 4600,\n    'fontSize' = 4700,\n    'lineHeight' = 4800,\n    'listStylePosition' = 4900,\n    'listStyleType' = 5000,\n    'margin' = 5100,\n    'maxHeight' = 5200,\n    'maxWidth' = 5300,\n    'minHeight' = 5400,\n    'minWidth' = 5500,\n    'objectFit' = 5600,\n    'objectPosition' = 5700,\n    'opacity' = 5800,\n    'outline' = 5900,\n    'overflow' = 6000,\n    'overscrollBehavior' = 6100,\n    'padding' = 6200,\n    'placeholderColor' = 6300,\n    'placeholderOpacity' = 6400,\n    'caretColor' = 6450,\n    'caretOpacity' = 6460,\n    'tabSize' = 6470,\n    'pointerEvents' = 6500,\n    'position' = 6600,\n    'inset' = 6700,\n    'resize' = 6800,\n    'boxShadow' = 6900,\n    'boxShadowColor' = 6950,\n    'ringWidth' = 7000,\n    'ringOffsetColor' = 7100,\n    'ringOffsetWidth' = 7200,\n    'ringColor' = 7300,\n    'ringOpacity' = 7400,\n    'fill' = 7500,\n    'stroke' = 7600,\n    'strokeWidth' = 7700,\n    'strokeDashArray' = 7750,\n    'strokeDashOffset' = 7760,\n    'tableLayout' = 7800,\n    'textAlign' = 7900,\n    'textColor' = 8000,\n    'textOpacity' = 8100,\n    'textOverflow' = 8200,\n    'textShadow' = 8250,\n    'fontStyle' = 8300,\n    'textTransform' = 8400,\n    'textDecorationStyle' = 8450,\n    'textDecorationLength' = 8455,\n    'textDecorationColor' = 8460,\n    'textDecorationOpacity' = 8470,\n    'textDecorationOffset' = 8480,\n    'textDecoration' = 8500,\n    'textIndent' = 8550,\n    'textStrokeColor' = 8560,\n    'textStrokeWidth' = 8570,\n    'content' = 8580,\n    'fontSmoothing' = 8600,\n    'fontVariantNumeric' = 8700,\n    'letterSpacing' = 8800,\n    'userSelect' = 8900,\n    'verticalAlign' = 9000,\n    'visibility' = 9100,\n    'backfaceVisibility' = 9150,\n    'whitespace' = 9200,\n    'wordBreak' = 9300,\n    'writingMode' = 9340,\n    'hyphens' = 9350,\n    'width' = 9400,\n    'zIndex' = 9500,\n    'isolation' = 9550,\n    'gap' = 9600,\n    'gridAutoFlow' = 9700,\n    'gridTemplateColumns' = 9800,\n    'gridAutoColumns' = 9900,\n    'gridColumn' = 10000,\n    'gridColumnStart' = 10100,\n    'gridColumnEnd' = 10200,\n    'gridTemplateRows' = 10300,\n    'gridAutoRows' = 10400,\n    'gridRow' = 10500,\n    'gridRowStart' = 10600,\n    'gridRowEnd' = 10700,\n    'transform' = 10800,\n    'transformOrigin' = 10900,\n    'scale' = 11000,\n    'rotate' = 11100,\n    'translate' = 11200,\n    'skew' = 11300,\n    'perspective' = 11350,\n    'perspectiveOrigin' = 11360,\n    'transitionProperty' = 11400,\n    'transitionTimingFunction' = 11500,\n    'transitionDuration' = 11600,\n    'transitionDelay' = 11700,\n    'keyframes' = 11800,\n    'animation' = 11900,\n    'imageRendering' = 11950,\n    'mixBlendMode' = 12000,\n    'backgroundBlendMode' = 12100,\n    'filter' = 12200,\n    'blur' = 12300,\n    'brightness' = 12400,\n    'contrast' = 12500,\n    'dropShadow' = 12600,\n    'grayscale' = 12700,\n    'hueRotate' = 12800,\n    'invert' = 12900,\n    'saturate' = 13000,\n    'sepia' = 13100,\n    'backdropFilter' = 13200,\n    'backdropBlur' = 13300,\n    'backdropBrightness' = 13400,\n    'backdropContrast' = 13500,\n    'backdropGrayscale' = 13600,\n    'backdropHueRotate' = 13700,\n    'backdropInvert' = 13800,\n    'backdropOpacity' = 13900,\n    'backdropSaturate' = 14000,\n    'backdropSepia' = 14100\n}\n","import * as csstype from 'csstype';\nimport {layerOrder, pluginOrder} from './order';\n\nexport type Value = null | undefined | string | number;\n\nexport interface Meta {\n    layer: string;\n    order: number;\n    offset: number;\n    variants: string[];\n}\n\nexport interface Block\n    extends csstype.PropertiesFallback<Value, Value>,\n        csstype.PropertiesHyphenFallback<Value, Value> {\n    [property: string]: Value | Value[] | Block;\n}\n\nexport interface CSS {\n    [selector: string]: Block;\n}\n\nexport type LayerName = 'base' | 'utilities' | 'components';\n\nexport class Declaration {\n    property: string;\n    value: string;\n    important: boolean;\n    constructor(property: string, value: string, important = false) {\n        this.property = property;\n        this.value = value;\n        this.important = important;\n    }\n\n    build() {\n        return `${this.property}:${this.value}${\n            this.important ? '!important' : ''\n        }`;\n    }\n}\n\nexport class Container {\n    nodes: (Declaration | Container)[];\n    _meta: Meta = {\n        layer: 'components',\n        order: 0,\n        offset: 0,\n        variants: []\n    };\n    important = false;\n\n    constructor(nodes: (Declaration | Container)[] = []) {\n        this.nodes = nodes;\n    }\n\n    meta(\n        layer = this._meta.layer,\n        plugin?: string,\n        order = this._meta.order,\n        offset = this._meta.offset,\n        variants = this._meta.variants\n    ) {\n        this._meta = {\n            layer,\n            order: plugin\n                ? pluginOrder[plugin as keyof typeof pluginOrder]\n                : order,\n            offset,\n            variants\n        };\n        return this;\n    }\n\n    build(): string {\n        return this.nodes.map(node => node.build()).join('');\n    }\n}\n\nexport class Style extends Container {\n    selectors: string[] = [];\n    prepend: string[] = [];\n    append: string[] = [];\n    atRules: string[] = [];\n    nodes: Declaration[];\n    constructor(\n        selectors: string | string[] = [],\n        style: Declaration | Declaration[] = []\n    ) {\n        super();\n        if (Array.isArray(selectors)) this.selectors = selectors;\n        else this.selectorText(selectors);\n        this.nodes = Array.isArray(style) ? style : [style];\n    }\n\n    selectorText(selectorText?: string) {\n        if (selectorText) this.selectors = selectorText.split(/\\s*,\\s*/);\n        else\n            return this.selectors\n                .map(\n                    selector =>\n                        `${this.prepend.join('')}${selector}${this.append.join(\n                            ''\n                        )}`\n                )\n                .join(',');\n    }\n\n    clone(\n        selectors: string | string[] = [...this.selectors],\n        nodes: Declaration | Declaration[] = [...this.nodes]\n    ) {\n        const style = new Style(selectors, nodes);\n        style.atRules = [...this.atRules];\n        style._meta = {...this._meta};\n        return style;\n    }\n\n    build() {\n        let css = `${this.selectorText(undefined)}{${this.nodes\n            .map(decl => {\n                if (this.important) decl.important = true;\n                return decl.build();\n            })\n            .join(';')}}`;\n        this.atRules.forEach(rule => (css = `${rule}{${css}}`));\n        return css;\n    }\n}\n\nexport class InlineAtRule extends Container {\n    name: string;\n    params: string;\n    constructor(name: string, params: string) {\n        super();\n        this.name = name;\n        this.params = params;\n    }\n    build() {\n        return `${this.name} ${this.params};`;\n    }\n}\n\ntype sheetVariants = {[variant: string]: sheetVariants | Container[]};\ntype sheetLayers = Record<string, sheetVariants>;\nexport class StyleSheet {\n    layers: sheetLayers = {};\n    variantOrder: string[] = [];\n    constructor() {} // eslint-disable-line\n    add(...styles: Container[]) {\n        styles.forEach(style => {\n            let layer =\n                this.layers[style._meta.layer] ||\n                (this.layers[style._meta.layer] = {});\n\n            for (const variant of style._meta.variants) {\n                layer = (layer[variant] ||\n                    (layer[variant] = {})) as sheetVariants;\n            }\n            ((layer.DEFAULT || (layer.DEFAULT = [])) as Container[]).push(\n                style\n            );\n        });\n    }\n    buildGroup(styles?: Container[]) {\n        return styles\n            ? styles\n                  .sort(\n                      (a: Container, b: Container) =>\n                          a._meta.order - b._meta.order ||\n                          a._meta.offset - b._meta.offset\n                  )\n                  .map(style => {\n                      return style.build();\n                  })\n                  .join('')\n            : '';\n    }\n    buildVariant(variantOrder: string[], variants?: sheetVariants): string {\n        return variants\n            ? this.buildGroup(variants.DEFAULT as Container[]) +\n                  variantOrder\n                      .map(variant =>\n                          this.buildVariant(\n                              variantOrder,\n                              variants[variant] as sheetVariants\n                          )\n                      )\n                      .join('')\n            : '';\n    }\n    build(variantOrder = this.variantOrder) {\n        return layerOrder\n            .map(layer => this.buildVariant(variantOrder, this.layers[layer]))\n            .join('');\n    }\n}\nconst IMPORTANT = /\\s*!important\\s*$/i;\n\nconst UNITLESS = [\n    'box-flex',\n    'box-flex-group',\n    'column-count',\n    'flex',\n    'flex-grow',\n    'flex-positive',\n    'flex-shrink',\n    'flex-negative',\n    'font-weight',\n    'line-clamp',\n    'line-height',\n    'opacity',\n    'order',\n    'orphans',\n    'tab-size',\n    'widows',\n    'z-index',\n    'zoom',\n    'fill-opacity',\n    'stroke-dashoffset',\n    'stroke-opacity',\n    'stroke-width'\n];\n\nexport function dashify(str: string) {\n    return str\n        .replace(/([A-Z])/g, '-$1')\n        .replace(/^ms-/, '-ms-')\n        .toLowerCase();\n}\n\nfunction decl(parent: Style, name: string, value?: string | number | null) {\n    name = dashify(name);\n    let propValue = '',\n        important = false;\n    if (value === undefined || value === null) return;\n    else if (typeof value === 'number') {\n        if (value === 0 || UNITLESS.indexOf(name) > -1)\n            propValue = value.toString();\n        else propValue = value + 'px';\n    } else if (IMPORTANT.test(value)) {\n        propValue = value.replace(IMPORTANT, '');\n        important = true;\n    } else propValue = value;\n\n    parent.nodes.push(new Declaration(name, propValue, important));\n}\n\nexport function parseCSS(parent: string, obj: Block, root?: Style) {\n    if (!root) root = new Style(parent);\n\n    const output = [root];\n    for (const [name, value] of Object.entries(obj)) {\n        if (value === null || typeof value === 'undefined') {\n            continue;\n        } else if (name[0] === '@') {\n            const parts = name.match(\n                /@(\\S+)(\\s+([\\W\\w]*)\\s*)?/\n            ) as RegExpMatchArray;\n            if (parts) {\n                if (typeof value == 'object' && !Array.isArray(value))\n                    output.push(\n                        ...parseCSS(\n                            parent,\n                            value,\n                            root.clone(undefined, [])\n                        ).map(sty => {\n                            sty.atRules.push(`@${parts[1]} ${parts[3]}`);\n                            return sty;\n                        })\n                    );\n            }\n        } else if (Array.isArray(value)) {\n            for (const i of value) {\n                decl(root, name, i);\n            }\n        } else if (typeof value === 'object') {\n            const selector =\n                name[0] === '&'\n                    ? name.replace(/&/g, parent)\n                    : `${parent} ${name.replace(/&/g, parent)}`;\n            output.push(...parseCSS(parent, value, root.clone(selector, [])));\n        } else {\n            decl(root, name, value);\n        }\n    }\n    return output;\n}\n","import type {VariantGenerator, Plugin} from '../interfaces';\n\ntype RawBreakpoint = {raw: string};\ntype MinMaxBreakpoint = {min?: string; max?: string};\ntype ScreenBreakpoint = RawBreakpoint | MinMaxBreakpoint;\n\nexport default (({addVariant, theme}) => {\n    const breakpoints = Object.entries(\n        theme('screens') as Record<string, string | ScreenBreakpoint>\n    ).sort(([, sizeA], [, sizeB]) => sortWeight(sizeA) - sortWeight(sizeB));\n\n    breakpoints.forEach(([name, size], index) => {\n        if (typeof size === 'string') {\n            const [, nextSize] = breakpoints[index + 1] || [];\n            addVariant(name, styleForBreakpoint({min: size}));\n            addVariant(\n                `<${name}`,\n                styleForBreakpoint({\n                    max: size.replace(\n                        /^-?[0-9]+\\.?[0-9]*/,\n                        value => +value - 0.1 + ''\n                    )\n                })\n            );\n            addVariant(\n                `@${name}`,\n                styleForBreakpoint(\n                    nextSize\n                        ? {\n                              min: size,\n                              max: (nextSize as string).replace(\n                                  /^-?[0-9]+\\.?[0-9]*/,\n                                  value => +value - 0.1 + ''\n                              )\n                          }\n                        : {min: size}\n                )\n            );\n            addVariant(`-${name}`, styleForBreakpoint({max: size}));\n            addVariant(\n                `\\\\+${name}`,\n                styleForBreakpoint(\n                    nextSize\n                        ? {min: size, max: nextSize as string}\n                        : {min: size}\n                )\n            );\n        } else {\n            addVariant(name, styleForBreakpoint(size));\n        }\n    });\n\n    /*\n     * See MDN web docs for more information\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes\n     */\n    [\n        'active',\n        'any-link',\n        'checked',\n        'default',\n        'disabled',\n        'empty',\n        'enabled',\n        // 'first-child',\n        'first',\n        'first-of-type',\n        'fullscreen',\n        'future',\n        'focus',\n        'focus-visible',\n        'focus-within',\n        'hover',\n        'indeterminate',\n        'in-range',\n        'invalid',\n        // 'last-child',\n        'last',\n        'last-of-type',\n        'left',\n        'link',\n        'only-child',\n        'only-of-type',\n        'optional',\n        'out-of-range',\n        'read-only',\n        'read-write',\n        'required',\n        'right',\n        'root',\n        'scope',\n        'target',\n        'valid',\n        'visited'\n    ].forEach(pseudo => {\n        addVariant(pseudo, ({style}) =>\n            style.append.push(\n                ':' + ['first', 'last'].includes(pseudo)\n                    ? pseudo + '-child'\n                    : pseudo\n            )\n        );\n\n        // Not states\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/:not\n        addVariant('not-' + pseudo, ({style}) =>\n            style.append.push(`:not(:${pseudo})`)\n        );\n\n        // Group states\n        // You'll need to add className=\"group\" to an ancestor to make these work\n        // https://github.com/ben-rogerson/twin.macro/blob/master/docs/group.md\n        addVariant('group-' + pseudo, ({style}) =>\n            style.prepend.push(`group:${pseudo} `)\n        );\n    });\n\n    /*\n     * See MDN web docs for more information\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements\n     */\n    [\n        'after',\n        'backdrop',\n        'before',\n        'first-letter',\n        'first-line',\n        'marker',\n        'placeholder',\n        'selection'\n    ].forEach(pseudo => {\n        addVariant(pseudo, ({style}) => style.append.push('::' + pseudo));\n    });\n    ['even', 'odd'].forEach(pseudo => {\n        addVariant(pseudo, ({style}) =>\n            style.append.push(`nth-child(${pseudo})`)\n        );\n    });\n    ['even', 'odd'].forEach(pseudo => {\n        addVariant(pseudo, ({style}) =>\n            style.append.push(`nth-of-type(${pseudo})`)\n        );\n    });\n\n    addVariant('svg', ({style}) => style.append.push(' svg'));\n    addVariant('all', ({style}) => style.append.push(' *'));\n    addVariant('children', ({style}) => style.append.push(' > *'));\n    addVariant('siblings', ({style}) => style.append.push(' ~ *'));\n    addVariant('sibling', ({style}) => style.append.push(' + *'));\n\n    addVariant('ltr', ({style}) => style.append.push(\"[dir='ltr'] \"));\n    addVariant('rtl', ({style}) => style.append.push(\"[dir='rtl'] \"));\n\n    // Motion control\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion\n    addVariant('motion-safe', ({style}) =>\n        style.atRules.push('@media (prefers-reduced-motion: no-preference)')\n    );\n    addVariant('motion-reduce', ({style}) =>\n        style.atRules.push('@media (prefers-reduced-motion: reduce)')\n    );\n    ['dark', 'light'].forEach(type => {\n        const at: VariantGenerator = ({style}) =>\n                style.atRules.push(`@media (prefers-color-scheme: ${type})`),\n            dot: VariantGenerator = ({style}) =>\n                style.prepend.push(`.${type} `);\n        addVariant('@' + type, at);\n        addVariant('.' + type, dot);\n        addVariant(type, theme('darkMode') === 'media' ? at : dot);\n    });\n}) as Plugin;\n\nfunction styleForBreakpoint(rule: ScreenBreakpoint): VariantGenerator {\n    const mediaConditions =\n        'raw' in rule\n            ? rule.raw\n            : [\n                  rule.min && `(min-width: ${rule.min})`,\n                  rule.max && `(max-width: ${rule.max})`\n              ]\n                  .filter(Boolean)\n                  .join(' and ');\n    return ({style}) => style.atRules.push(`@media ${mediaConditions}`);\n}\n\n// NOTE: Non-size breakpoints should come first, to avoid using them in the\n// +breakpoint definition.\nfunction sortWeight(breakpoint: string | ScreenBreakpoint): number {\n    return typeof breakpoint === 'string'\n        ? parseInt(breakpoint)\n        : Number.NEGATIVE_INFINITY;\n}\n","import type {UtilityGenerator} from './interfaces';\nimport {dashify} from './style';\n\nexport function propertyStatic(\n    property: string,\n    map: {\n        [key: string]: unknown;\n    }\n): UtilityGenerator {\n    return util =>\n        util\n            .static(map)\n            .property(dashify(property))\n            ?.meta(\n                'utilities',\n                property,\n                undefined,\n                Object.keys(map).indexOf(util.rest) + 1\n            );\n}\n\nexport function propertyValues(\n    values: string[],\n    property?: string\n): UtilityGenerator {\n    return util =>\n        util\n            .string(value => (values.includes(value) ? value : undefined))\n            .property(property ? dashify(property) : util.id)\n            ?.meta(\n                'utilities',\n                property || util.id,\n                undefined,\n                values.indexOf(util.value as string) + 1\n            );\n}\n\nexport function propertyBody(\n    map: {\n        [key: string]: unknown;\n    },\n    property?: string\n): UtilityGenerator {\n    return util =>\n        util\n            .body(map)\n            .property(property ? dashify(property) : util.id)\n            ?.meta(\n                'utilities',\n                property || util.id,\n                undefined,\n                Object.keys(map).indexOf(util.rest) + 1\n            );\n}\n\n/** @reference https://git.io/JuD04 **/\nexport const escape =\n    typeof CSS !== 'undefined' && CSS.escape\n        ? CSS.escape\n        : (ident: string) =>\n              ident.replace(\n                  /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g, // eslint-disable-line no-control-regex\n                  (ch, asCodePoint) => {\n                      if (asCodePoint) {\n                          // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n                          if (ch === '\\0') {\n                              return '\\uFFFD';\n                          }\n\n                          // Control characters and (dependent upon position) numbers get escaped as code points\n                          return (\n                              ch.slice(0, -1) +\n                              '\\\\' +\n                              ch.charCodeAt(ch.length - 1).toString(16) +\n                              ' '\n                          );\n                      }\n\n                      // Other potentially-special ASCII characters get backslash-escaped\n                      return '\\\\' + ch;\n                  }\n              );\n\nexport const css = (strings: TemplateStringsArray, ...args: unknown[]) =>\n    strings.reduce(\n        (acc, currentString, index) =>\n            acc + currentString + (args[index] || ''),\n        ''\n    );\n\nexport function deepExtend(out: any, ...args: any[]) {\n    out = out || {};\n\n    for (const obj of args) {\n        if (!obj) continue;\n\n        for (const [key, value] of Object.entries(obj)) {\n            if (typeof value === 'object') {\n                if (Array.isArray(value))\n                    if (out[key]) out[1] = [...out[key], ...value.slice(0)];\n                    else out[key] = value.slice(0);\n                else out[key] = deepExtend(out[key], value);\n            } else out[key] = value;\n        }\n    }\n\n    return out;\n}\nexport function rgb2hex(r: number, g: number, b: number) {\n    let sr = r.toString(16),\n        sg = g.toString(16),\n        sb = b.toString(16);\n\n    if (sr.length == 1) sr = '0' + r;\n    if (sg.length == 1) sg = '0' + g;\n    if (sb.length == 1) sb = '0' + b;\n\n    return '#' + sr + sg + sb;\n}\n\nexport function hex2rgb(h: string) {\n    let r = '',\n        g = '',\n        b = '';\n\n    // 3 digits\n    if (h.length == 4) {\n        r = h[1] + h[1];\n        g = h[2] + h[2];\n        b = h[3] + h[3];\n\n        // 6 digits\n    } else if (h.length == 7) {\n        r = h[1] + h[2];\n        g = h[3] + h[4];\n        b = h[5] + h[6];\n    }\n\n    return {r: parseInt(r, 16), g: parseInt(g, 16), b: parseInt(b, 16)};\n}\n\nexport function hsl2rgb(h: number, s: number, l: number) {\n    // Must be fractions of 1\n    s /= 100;\n    l /= 100;\n\n    const c = (1 - Math.abs(2 * l - 1)) * s,\n        x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\n        m = l - c / 2;\n    let r = 0,\n        g = 0,\n        b = 0;\n\n    if (0 <= h && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    } else if (60 <= h && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    } else if (120 <= h && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    } else if (180 <= h && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    } else if (240 <= h && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    } else if (300 <= h && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n\n    return {r, g, b};\n}\n\nexport function rgb2hsl(r: number, g: number, b: number) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    const cmin = Math.min(r, g, b),\n        cmax = Math.max(r, g, b),\n        delta = cmax - cmin;\n    let h = 0,\n        s = 0,\n        l = 0;\n    // Calculate hue\n    // No difference\n    if (delta == 0) h = 0;\n    // Red is max\n    else if (cmax == r) h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax == g) h = (b - r) / delta + 2;\n    // Blue is max\n    else h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n\n    // Make negative hues positive behind 360°\n    if (h < 0) h += 360;\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    return {h, s, l};\n}\n\nexport function hsl2hex(h: number, s: number, l: number) {\n    const {r, g, b} = hsl2rgb(h, s, l);\n    return rgb2hex(r, g, b);\n}\n\nexport function hex2hsl(hex: string) {\n    const {r, g, b} = hex2rgb(hex);\n    return rgb2hsl(r, g, b);\n}\n","import {variantOrder} from './order';\nimport type {Config} from './interfaces';\nimport defaultPlugin from './plugins';\nimport {hsl2hex} from './tools';\n\nconst colors: {[key: string]: string} = {};\n[\n    'red',\n    'dark-orange',\n    'orange',\n    'yellow',\n    'lime',\n    'bright-green',\n    'light-green',\n    'green',\n    'emerald',\n    'teal',\n    'light-blue',\n    'blue',\n    'indigo',\n    'violet',\n    'purple',\n    'fuchsia',\n    'hotpink',\n    'pink'\n].forEach((name, index) => (colors[name] = hsl2hex(index * 20, 100, 50)));\nexport const baseConfig: Config = {\n    // purge: [],\n    prefixer: true,\n    attributify: false,\n    darkMode: 'class', // or 'media'\n    theme: {\n        screens: {\n            sm: '640px',\n            md: '768px',\n            lg: '1024px',\n            xl: '1280px',\n            '2xl': '1536px'\n        },\n        colors,\n        inset: {}\n    },\n    variantOrder: variantOrder,\n    plugins: [defaultPlugin]\n};\n\nexport default baseConfig;\n","import type {PluginUtils} from '../interfaces';\nimport preflight from './preflight';\nimport utilities from './utilities';\nimport variants from './variants';\n\nexport default function defaultPlugin(utils: PluginUtils) {\n    utilities(utils);\n    variants(utils);\n    preflight(utils);\n}\n","import type {Plugin} from '../interfaces';\nimport {Block, dashify} from '../style';\n\nexport default (({\n    addBase: base,\n    addUtilities: add,\n    addComponents: component,\n    addDynamic: dynamic,\n    theme\n}) => {\n    function Value<P extends string, V extends string>(\n        values: V[],\n        property: P\n    ) {\n        add(\n            Object.fromEntries(\n                values.map(value => [\n                    `.${value}`,\n                    {[dashify(property)]: value} as {[key in P]: V}\n                ])\n            ),\n            {group: property}\n        );\n    }\n\n    function nameValue(values: string[], name: string, property = name) {\n        add(\n            Object.fromEntries(\n                values.map(value => [\n                    `.${name}-${value}`,\n                    {[dashify(property)]: value}\n                ])\n            ),\n            {group: property}\n        );\n    }\n\n    function nameMap(\n        map: Record<string, string>,\n        name: string,\n        property = name\n    ) {\n        add(\n            Object.fromEntries(\n                Object.entries(map).map(([value, css]) => [\n                    `.${name}-${value}`,\n                    {[dashify(property)]: css}\n                ])\n            ),\n            {group: property}\n        );\n    }\n\n    /** @category LAYOUT */\n\n    // https://tailwindcss.com/docs/container\n    component(\n        {\n            '.container': {\n                width: '100%',\n                paddingLeft:\n                    theme('container.padding.DEFAULT') ||\n                    theme('container.padding'),\n                paddingRight:\n                    theme('container.padding.DEFAULT') ||\n                    theme('container.padding'),\n                marginRight: theme('container.center') ? 'auto' : undefined,\n                marginLeft: theme('container.center') ? 'auto' : undefined,\n                ...Object.fromEntries(\n                    Object.entries(\n                        theme('container.screens') || theme('screens')\n                    ).map(([screen, size]) => [\n                        `@media (min-width: ${size})`,\n                        {\n                            width: size,\n                            paddingLeft: theme(`container.padding.${screen}`),\n                            paddingRight: theme(`container.padding.${screen}`)\n                        } as Block\n                    ])\n                )\n            }\n        },\n        {group: 'container'}\n    );\n\n    // https://tailwindcss.com/docs/box-decoration-break\n    nameValue(['slice', 'clone'], 'decoration', 'boxDecorationBreak');\n\n    // https://tailwindcss.com/docs/box-sizing\n    nameMap(\n        {\n            border: 'border-box',\n            content: 'content-box'\n        },\n        'box',\n        'boxSizing'\n    );\n\n    // https://tailwindcss.com/docs/display\n    add(\n        Object.fromEntries(\n            [\n                'block',\n                'inline-block',\n                'inline',\n                'flex',\n                'inline-flex',\n                'table',\n                'inline-table',\n                'table-caption',\n                'table-cell',\n                'table-column',\n                'table-column-group',\n                'table-footer-group',\n                'table-header-group',\n                'table-row-group',\n                'table-row',\n                'flow-root',\n                'grid',\n                'inline-grid',\n                'contents',\n                'list-item',\n                'hidden'\n            ].map(value => [\n                '.' + value,\n                {display: value === 'hidden' ? 'none' : value}\n            ])\n        ),\n        {group: 'display'}\n    );\n\n    // https://tailwindcss.com/docs/float\n    nameValue(['right', 'left', 'none'], 'float');\n\n    // https://tailwindcss.com/docs/clear\n    nameValue(['left', 'right', 'both', 'none'], 'clear');\n\n    // https://tailwindcss.com/docs/isolation\n    add(\n        {\n            '.isolate': {\n                isolation: 'isolate'\n            },\n            '.isolation-auto': {\n                isolation: 'auto'\n            }\n        },\n        {group: 'isolation'}\n    );\n\n    // https://tailwindcss.com/docs/object-fit\n    nameValue(['contain', 'cover', 'fill', 'none', 'scale-down'], 'objectFit');\n\n    // https://tailwindcss.com/docs/object-position\n    dynamic('object', utility =>\n        utility\n            .body(theme('objectPosition'))\n            .string(value => value.split('-').join(' '))\n            .property('object-position')\n            ?.meta('utilities', 'objectPosition')\n    );\n\n    // https://tailwindcss.com/docs/overflow\n    const overflow = ['auto', 'hidden', 'visible', 'scroll'];\n    nameValue(overflow, 'overflow');\n    nameValue(overflow, 'overflow-x');\n    nameValue(overflow, 'overflow-y');\n\n    // https://tailwindcss.com/docs/position\n    Value(['static', 'fixed', 'absolute', 'relative', 'sticky'], 'position');\n\n    // https://tailwindcss.com/docs/top-right-bottom-left\n    dynamic('top|right|bottom|left|inset(-x|-y)?', utility =>\n        utility\n            .body(theme('inset'))\n            .sqb()\n            .spacing()\n            .ratio()\n            .dimension()\n            .variable()\n            .callback(() => {\n                switch (utility.id) {\n                    case 'top':\n                    case 'right':\n                    case 'bottom':\n                    case 'left':\n                        return utility\n                            .property(utility.id)\n                            ?.meta('utilities', 'inset', undefined, 4);\n                    case 'inset-x':\n                        return utility\n                            .property(['right', 'left'])\n                            ?.meta('utilities', 'inset', undefined, 3);\n                    case 'inset-y':\n                        return utility\n                            .property(['top', 'bottom'])\n                            ?.meta('utilities', 'inset', undefined, 2);\n                    case 'inset':\n                        return utility\n                            .property(['top', 'right', 'bottom', 'left'])\n                            ?.meta('utilities', 'inset', undefined, 1);\n                }\n            })\n    );\n\n    // https://tailwindcss.com/docs/visibility\n    add(\n        {\n            '.visible': {visibility: 'visible'},\n            '.invisible': {visibility: 'hidden'}\n        },\n        {group: 'visibility'}\n    );\n\n    // https://tailwindcss.com/docs/z-index\n    dynamic('z', utility =>\n        utility\n            .body(theme('zIndex'))\n            .int()\n            .variable()\n            .property('z-index')\n            ?.meta('utilities', 'zIndex')\n    );\n\n    dynamic('bg', utility =>\n        utility\n            .color(\n                theme('backgroundColor') || theme('colors'),\n                ({r, g, b}) => `rgba(${r},${g},${b},var(--mh-bg-opacity))`\n            )\n            .sqb()\n            .variable()\n            .css({'--mh-bg-opacity': '1', backgroundColor: utility.value})\n            ?.map(style => style.meta('utilities', 'backgroundColor'))\n    );\n\n    dynamic('h|w', utility => {\n        const name = utility.id === 'w' ? 'width' : 'height';\n        return utility\n            .body(theme(name))\n            .sqb()\n            .spacing()\n            .ratio()\n            .dimension()\n            .nxl(number => `${(number - 3) * 8 + 48}rem`)\n            .variable()\n            .property(name)\n            ?.meta('utilities', name, undefined);\n    });\n\n    dynamic('space-(x|y)', utility =>\n        utility\n            .body(theme('space'))\n            .sqb()\n            .spacing()\n            .dimension()\n            .variable()\n            .css(\n                utility.match[1] === 'x'\n                    ? {\n                          '--tw-space-x-reverse': '0',\n                          'margin-right': `calc(${utility.value} * var(--tw-space-x-reverse))`,\n                          'margin-left': `calc(${utility.value} * calc(1 - var(--tw-space-x-reverse)))`\n                      }\n                    : {\n                          '--tw-space-y-reverse': '0',\n                          'margin-top': `calc(${utility.value} * calc(1 - var(--tw-space-y-reverse)))`,\n                          'margin-bottom': `calc(${utility.value} * var(--tw-space-y-reverse))`\n                      }\n            )\n            ?.map(style => {\n                style.selectors = style.selectors.map(\n                    selector => selector + '> :not([hidden]) ~ :not([hidden])'\n                );\n                return style.meta(\n                    'utilities',\n                    'space',\n                    undefined,\n                    (utility.match[1] === 'x' ? 2 : 1) +\n                        (utility.isNegative ? 2 : 0)\n                );\n            })\n    );\n\n    dynamic('grid-(cols|rows)', utility => {\n        const type = utility.match[1] === 'cols' ? 'columns' : 'rows';\n        const group =\n            type === 'rows' ? 'gridTemplateRows' : 'gridTemplateColumns';\n\n        return (\n            utility\n                .body(theme(group))\n                .sqb()\n                .string(value => (value === 'none' ? value : undefined))\n                .property(`grid-template-${type}`)\n                ?.meta('utilities', group, undefined, 1) ||\n            utility\n                .int()\n                .variable()\n                .property(\n                    `grid-template-${type}`,\n                    value => `repeat(${value}, minmax(0, 1fr))`\n                )\n                ?.meta('utilities', group, undefined, 2)\n        );\n    });\n}) as Plugin;\n","import type {Plugin} from '../interfaces';\n\nexport default (({addBase, theme}) => {\n    addBase({\n        '*,::before,::after': {\n            boxSizing: 'border-box',\n            borderWidth: '0',\n            borderStyle: 'solid',\n            borderColor: 'currentColor'\n        },\n        html: {\n            lineHeight: 1.5,\n            WebkitTextSizeAdjust: '100%',\n            MozTabSize: '4',\n            tabSize: 4,\n            fontFamily: theme(\n                'fontFamily.sans',\n                `ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"`\n            )\n        },\n        body: {\n            margin: '0',\n            lineHeight: 'inherit'\n        },\n        hr: {\n            height: '0',\n            color: 'inherit',\n            borderTopWidth: '1px'\n        },\n        'abbr[title]': {\n            textDecoration: 'underline dotted'\n        },\n        'h1,h2,h3,h4,h5,h6': {\n            fontSize: 'inherit',\n            fontWeight: 'inherit'\n        },\n        a: {\n            color: 'inherit',\n            textDecoration: 'inherit'\n        },\n        'b,strong': {\n            fontWeight: 'bolder'\n        },\n        'code,kbd,samp,pre': {\n            fontFamily: theme(\n                'fontFamily.mono',\n                `ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace`\n            ),\n            fontSize: '1em'\n        },\n        small: {\n            fontSize: '80%'\n        },\n        'sub,sup': {\n            fontSize: '75%',\n            lineHeight: 0,\n            position: 'relative',\n            verticalAlign: 'baseline'\n        },\n        sub: {\n            bottom: '-0.25em'\n        },\n        sup: {\n            top: '-0.5em'\n        },\n        table: {\n            textIndent: '0',\n            borderColor: 'inherit',\n            borderCollapse: 'collapse'\n        },\n        'button,input,optgroup,select,textarea': {\n            fontFamily: 'inherit',\n            fontSize: '100%',\n            lineHeight: 'inherit',\n            color: 'inherit',\n            margin: '0',\n            padding: '0'\n        },\n        'button,select': {\n            textTransform: 'none'\n        },\n        \"button,[type='button'],[type='reset'],[type='submit']\": {\n            WebkitAppearance: 'button',\n            backgroundColor: 'transparent',\n            backgroundImage: 'none'\n        },\n        ':-moz-focusring': {\n            outline: 'auto'\n        },\n        ':-moz-ui-invalid': {\n            boxShadow: 'none'\n        },\n        progress: {\n            verticalAlign: 'baseline'\n        },\n        '::-webkit-inner-spin-button,::-webkit-outer-spin-button': {\n            height: 'auto'\n        },\n        \"[type='search']\": {\n            WebkitAppearance: 'textfield',\n            outlineOffset: '-2px'\n        },\n        '::-webkit-search-decoration': {\n            WebkitAppearance: 'none'\n        },\n        '::-webkit-file-upload-button': {\n            WebkitAppearance: 'button',\n            font: 'inherit'\n        },\n        summary: {\n            display: 'list-item'\n        },\n        'blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre': {\n            margin: '0'\n        },\n        fieldset: {\n            margin: '0',\n            padding: '0'\n        },\n        legend: {\n            padding: '0'\n        },\n        'ol,ul': {\n            listStyle: 'none',\n            margin: '0',\n            padding: '0'\n        },\n        textarea: {\n            resize: 'vertical'\n        },\n        'input::placeholder,textarea::placeholder': {\n            opacity: 1,\n            color: \"theme('colors.gray.400', #9ca3af)\"\n        },\n        'button,[role=\"button\"]': {\n            cursor: 'pointer'\n        },\n        'img,svg,video,canvas,audio,iframe,embed,object': {\n            display: 'block',\n            verticalAlign: 'middle'\n        },\n        'img,video': {\n            maxWidth: '100%',\n            height: 'auto'\n        },\n        '[hidden]': {\n            display: 'none'\n        }\n    });\n}) as Plugin;\n","import type {Output} from './interfaces';\nimport {Block, Declaration, parseCSS, Style} from './style';\nimport {escape, hex2hsl, hex2rgb, hsl2rgb} from './tools';\n\nexport class Utility {\n    colors: {[key: string]: string};\n    original: string;\n    raw: string;\n    important = false;\n    isNegative = false;\n    id = '';\n    rest = '';\n    match: RegExpMatchArray = [];\n    value?: string = '';\n    variants: {id: string; match: RegExpMatchArray}[] = [];\n    constructor(raw: string, colors = {}) {\n        this.colors = colors;\n        this.original = raw; // -!placeholder-real-gray-300\n        this.raw = raw.replace(/^(!-?|-!?)/, match => {\n            this.important = match !== '-';\n            this.isNegative = match !== '!';\n            return '';\n        }); // placeholder-real-gray-300\n    }\n    matchPlugin(expression: string) {\n        const match = this.raw.match(`^${expression}`);\n        if (match) {\n            this.id = match[0];\n            this.rest =\n                (this.isNegative ? '-' : '') +\n                this.raw.slice(match[0].length + 1);\n            this.match = match;\n            return true;\n        }\n    }\n    matchVariant(expression: string) {\n        const match = this.raw.match(`^${expression}:`);\n        if (match) {\n            this.variants.push({id: expression, match});\n            this.raw = this.raw.slice(match[0].length);\n            return true;\n        }\n    }\n    get className() {\n        return '.' + escape(this.original); // .-placeholder-real-gray-300\n    }\n    static<T>(\n        map: {[key: string]: T} = {},\n        callback = (value: T | string) => value + ''\n    ) {\n        if (!this.value)\n            if ((this.raw || 'DEFAULT') in map)\n                this.value = callback(map[this.raw || 'DEFAULT']);\n        return this;\n    }\n    body<T>(\n        map: {[key: string]: T} = {},\n        callback = (value: T | string) => value + ''\n    ) {\n        if (!this.value)\n            if ((this.rest || 'DEFAULT') in map) {\n                this.value = callback(map[this.rest || 'DEFAULT']);\n            }\n        return this;\n    }\n    string(\n        callback: (value: string) => string | undefined = (value: string) =>\n            value + ''\n    ) {\n        if (!this.value) this.value = callback(this.rest);\n        return this;\n    }\n    int(callback = (value: number) => value + '') {\n        if (!this.value && /^-?\\d+$/.test(this.rest))\n            this.value = callback(+this.rest);\n        return this;\n    }\n    number(callback = (value: number) => value + '') {\n        if (!this.value && /^-?(\\d+(\\.\\d+)?)+$/.test(this.rest))\n            this.value = callback(+this.rest);\n        return this;\n    }\n    dimension(callback = (value: string) => value + '') {\n        if (!this.value && /^(\\d+(\\.\\d+)?)+\\w+$/.test(this.rest))\n            this.value = callback(this.rest);\n        return this;\n    }\n    percentage(callback = (value: number) => value + '') {\n        if (!this.value && /^-?(\\d+(\\.\\d+)?)+%$/.test(this.rest))\n            this.value = callback(+this.rest);\n        return this;\n    }\n    ratio(callback = (a: number, b: number) => (a / b) * 100 + '%') {\n        if (!this.value) {\n            const match = this.rest.match(/^(-?\\d+)\\/(-?\\d+)$/);\n            if (match) this.value = callback(+match[1], +match[2]);\n        }\n        return this;\n    }\n    color(\n        map: {[key: string]: string} = this.colors,\n        callback = ({r, g, b}: {r: number; g: number; b: number}) =>\n            `rgba(${r},${g},${b},var(--mh-opacity));)`\n    ) {\n        if (!this.value)\n            if ((this.rest || 'DEFAULT') in map) {\n                const value = hex2rgb(map[this.rest || 'DEFAULT']);\n                if (value) this.value = callback(value);\n            } else if (/^\\w+-\\d+$/.test(this.rest)) {\n                const match = this.rest.match(\n                    /^(\\w+)-(\\d+)$/\n                ) as RegExpMatchArray;\n                if (match[1] in map) {\n                    const hsl = hex2hsl(map[match[1]]);\n                    hsl.l = 100 - (+match[2] * 7) / 90;\n                    this.value = callback(hsl2rgb(hsl.h, hsl.s, hsl.l));\n                }\n            }\n        return this;\n    }\n    nxl(callback = (value: number) => value + '') {\n        if (!this.value && /^-?\\d*xl$/.test(this.rest))\n            this.value = callback(this.rest === 'xl' ? 1 : +this.rest);\n        return this;\n    }\n    sqb(callback = (value: string) => value) {\n        if (!this.value) {\n            const match = this.rest.match(/\\[(.+)\\]$/)?.[1];\n            if (match) this.value = callback(match.replace(/_/g, ' '));\n        }\n        return this;\n    }\n    spacing() {\n        return this.number(number =>\n            number === 0 ? '0px' : number / 4 + 'rem'\n        );\n    }\n    variable(callback = (value: string) => `var(--${value})`) {\n        if (!this.value) {\n            const match = this.rest.match(/^\\$([\\w-]+)$/)?.[1];\n            if (match) this.value = callback(match);\n        }\n        return this;\n    }\n    callback(func: (value: string) => Output) {\n        if (!this.value) return;\n        return func(this.value);\n    }\n    property(property: string | string[], callback = (value: string) => value) {\n        if (this.value)\n            return new Style(\n                this.className,\n                Array.isArray(property)\n                    ? property.map(\n                          prop =>\n                              new Declaration(\n                                  prop,\n                                  callback(this.value as string)\n                              )\n                      )\n                    : new Declaration(property, callback(this.value))\n            );\n    }\n    style(callback: (value: string) => Declaration | Declaration[]) {\n        if (this.value) return new Style(this.className, callback(this.value));\n    }\n\n    css(styles: Block) {\n        if (this.value) return parseCSS(this.className, styles);\n    }\n}\n","import {baseConfig} from './config';\nimport type {\n    Config,\n    UtilityGenerator,\n    PluginUtils,\n    VariantGenerator,\n    PluginUtilOptions,\n    Block,\n    Container,\n    CSS\n} from './interfaces';\nimport {parseCSS, Style, StyleSheet} from './style';\nimport {deepExtend, escape} from './tools';\nimport {Utility} from './util';\n\nexport class Processor {\n    staticPlugins: Map<\n        string,\n        {className: string; css: Block; options: PluginUtilOptions}\n    > = new Map();\n    preflighPlugins: Container[] = [];\n    dynamicPlugins: Map<string, UtilityGenerator> = new Map();\n    _variants: Map<string, VariantGenerator> = new Map();\n    count = 0;\n    cache: Set<string> = new Set();\n    _config: Config;\n    pluginUtils: PluginUtils = {\n        addDynamic: (key, generator, options) =>\n            this.addDynamic(key, generator, options),\n        addUtilities: (utilities, options) =>\n            this.addUtilities(utilities, options),\n        addComponents: (utilities, options) =>\n            this.addComponents(utilities, options),\n        addBase: utilities => this.addBase(utilities),\n        addVariant: (name, generator) => this.addVariant(name, generator),\n        e: ident => escape(ident),\n        prefix: selector => this.prefix(selector),\n        theme: (path, defaultValue) => this.theme(path, defaultValue),\n        config: (path, defaultValue) => this.config(path, defaultValue),\n        variants: (path, defaultValue) => this.variants(path, defaultValue)\n    };\n\n    constructor(config: Config = {}) {\n        this._config = this.resolveConfig(config);\n        for (const plugin of this._config.plugins ?? []) {\n            plugin(this.pluginUtils);\n        }\n    }\n\n    resolveConfig(config: Config): Config {\n        return deepExtend({}, baseConfig, config);\n    }\n\n    extract(className: string): Container[] | undefined {\n        const utility = new Utility(className);\n        let matched = true;\n        let styles: Container[] | undefined;\n        if (this._config.prefix)\n            className = className.replace(\n                new RegExp(`^${this._config.prefix}`),\n                ''\n            );\n        while (matched) {\n            matched = false;\n            for (const [variant] of this._variants) {\n                if (utility.matchVariant(variant)) matched = true;\n            }\n        }\n        for (const [expr, {className: realClass, css, options}] of this\n            .staticPlugins) {\n            if (\n                new RegExp(expr).test(\n                    escape((utility.isNegative ? '-' : '') + utility.raw)\n                )\n            ) {\n                const newClass = realClass.replace(\n                    '.' + escape((utility.isNegative ? '-' : '') + utility.raw),\n                    '.' + escape(className)\n                );\n                styles = parseCSS(\n                    options.respectPrefix ? this.prefix(newClass) : newClass,\n                    css\n                );\n                if (options.respectImportant && this._config.important)\n                    styles.forEach(style => (style.important = true));\n                styles = styles.map(style =>\n                    style.meta(\n                        options.layer,\n                        options.group,\n                        options.order,\n                        options.offset\n                    )\n                );\n                break;\n            }\n        }\n        if (!styles)\n            for (const [expr, generator] of this.dynamicPlugins) {\n                if (utility.matchPlugin(expr)) {\n                    const style = generator(utility, this.pluginUtils);\n                    if (style) {\n                        styles = Array.isArray(style) ? style : [style];\n                        break;\n                    }\n                }\n            }\n\n        if (styles) {\n            for (const variant of utility.variants) {\n                styles.forEach(style => {\n                    if (style instanceof Style) {\n                        style._meta.variants.push(variant.id);\n                        (this._variants.get(variant.id) as VariantGenerator)({\n                            style\n                        });\n                    }\n                });\n            }\n            if (utility.important)\n                styles.forEach(style => (style.important = true));\n\n            return styles;\n        }\n    }\n\n    interpret(classNames: string) {\n        const classes = classNames.split(/\\s+/g);\n        const success: string[] = [];\n        const ignored: string[] = [];\n        const styleSheet = new StyleSheet();\n        for (const className of classes) {\n            if (!this.cache.has(className)) {\n                const result = this.extract(className);\n                if (result) {\n                    success.push(className);\n                    styleSheet.add(...result);\n                    this.cache.add(className);\n                } else ignored.push(className);\n            }\n        }\n        styleSheet.variantOrder = this._config.variantOrder ?? [];\n        return {\n            success,\n            ignored,\n            styleSheet\n        };\n    }\n\n    preflight() {\n        return this.preflighPlugins;\n    }\n\n    e = escape;\n\n    prefix(selector: string): string {\n        return selector.replace(/(?=[\\w])/, this._config.prefix ?? '');\n    }\n\n    config<T>(path: string, defaultValue?: T): T {\n        try {\n            const value =\n                new Function('_', `return _.${path}`)(this._config) ||\n                defaultValue;\n            return value;\n        } catch {\n            return defaultValue as T;\n        }\n    }\n\n    theme<T>(path: string, defaultValue?: T): T {\n        return this.config(`theme.${path}`, defaultValue);\n    }\n\n    variants(path: string, defaultValue?: string[]) {\n        return Array.from(this._variants.keys());\n    }\n\n    private addStatic(\n        className: string,\n        utility: Block,\n        options: PluginUtilOptions\n    ) {\n        options = {\n            layer: 'utilities',\n            variants: [],\n            respectPrefix: true,\n            respectImportant: true,\n            ...options\n        };\n\n        options.order = options.group ? undefined : this.count++;\n\n        const classes = className.match(/\\.(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+/gu);\n\n        if (classes)\n            this.staticPlugins.set(\n                '^' + classes.map(cls => cls.slice(1)).join('$|^') + '$',\n                {className, css: utility, options}\n            );\n    }\n\n    addUtilities(\n        utils: CSS | CSS[],\n        options: string[] | PluginUtilOptions = {}\n    ) {\n        if (Array.isArray(options)) options = {variants: options};\n        options = {\n            layer: 'utilities',\n            variants: [],\n            respectPrefix: true,\n            respectImportant: true,\n            ...options\n        };\n        let offset = 0; // set offset\n        const addCSS = (utils: CSS) => {\n            for (const [className, styles] of Object.entries(utils)) {\n                this.addStatic(className, styles, {\n                    ...(options as PluginUtilOptions),\n                    offset: offset++\n                });\n            }\n        };\n        if (Array.isArray(utils)) utils.forEach(util => addCSS(util));\n        else addCSS(utils);\n    }\n    addComponents(\n        utils: CSS | CSS[],\n        options: string[] | PluginUtilOptions = {}\n    ) {\n        if (Array.isArray(options)) options = {variants: options};\n        return this.addUtilities(utils, {layer: 'components', ...options});\n    }\n    addBase(utils: CSS | CSS[], options: string[] | PluginUtilOptions = {}) {\n        if (Array.isArray(options)) options = {variants: options};\n        options = {\n            layer: 'base',\n            variants: [],\n            respectPrefix: true,\n            respectImportant: true,\n            ...options\n        };\n        let offset = 0; // set offset\n\n        const addCSS = (utils: CSS) => {\n            for (const [className, styles] of Object.entries(utils)) {\n                const css = parseCSS(className, styles).map(style =>\n                    style.meta(\n                        (options as PluginUtilOptions).layer,\n                        (options as PluginUtilOptions).group,\n                        (options as PluginUtilOptions).order || this.count++,\n                        offset++\n                    )\n                );\n                this.preflighPlugins.push(...css);\n            }\n        };\n        if (Array.isArray(utils)) utils.forEach(util => addCSS(util));\n        else addCSS(utils);\n    }\n\n    addDynamic(\n        name: string,\n        generator: UtilityGenerator,\n        options: PluginUtilOptions = {}\n    ) {\n        options = {\n            layer: 'utilities',\n            variants: [],\n            respectPrefix: true,\n            respectImportant: true,\n            ...options\n        };\n        this.dynamicPlugins.set(name, (util, tools) => {\n            const styles = generator(util, tools);\n            if (styles) {\n                if (Array.isArray(styles))\n                    styles.forEach(style => {\n                        style.meta(\n                            options.layer,\n                            options.group,\n                            options.order,\n                            undefined\n                        );\n                        if (options.respectImportant && this._config.important)\n                            style.important = true;\n                    });\n                else {\n                    styles.meta(\n                        options.layer,\n                        options.group,\n                        styles._meta.order ||\n                            (options.group ? undefined : this.count++),\n                        undefined\n                    );\n                    if (options.respectImportant && this._config.important)\n                        styles.important = true;\n                }\n                return styles;\n            }\n        });\n    }\n\n    addVariant(name: string, generator: VariantGenerator) {\n        if (!this._config.variantOrder?.includes(name))\n            this._config.variantOrder?.push(name);\n        this._variants.set(name, generator);\n    }\n}\n\nexport default Processor;\n"],"names":["layerOrder","pluginOrder","Declaration","constructor","property","value","important","this","build","Style","nodes","_meta","layer","order","offset","variants","meta","plugin","map","node","join","selectors","style","super","prepend","append","atRules","Array","isArray","selectorText","selector","split","clone","css","undefined","decl","forEach","rule","StyleSheet","layers","variantOrder","add","styles","variant","DEFAULT","push","buildGroup","sort","a","b","buildVariant","IMPORTANT","UNITLESS","dashify","str","replace","toLowerCase","parent","name","propValue","indexOf","toString","test","parseCSS","obj","root","output","Object","entries","parts","match","sty","i","styleForBreakpoint","mediaConditions","raw","min","max","filter","Boolean","sortWeight","breakpoint","parseInt","Number","NEGATIVE_INFINITY","escape","CSS","ident","ch","asCodePoint","slice","charCodeAt","length","deepExtend","out","args","key","hex2rgb","h","r","g","hsl2rgb","s","l","c","Math","abs","x","m","round","colors","index","sr","sg","sb","rgb2hex","hsl2hex","baseConfig","prefixer","attributify","darkMode","theme","screens","sm","md","lg","xl","inset","plugins","utils","addUtilities","addComponents","component","addDynamic","dynamic","nameValue","values","fromEntries","group","width","paddingLeft","paddingRight","marginRight","marginLeft","screen","size","border","content","nameMap","display","isolation","utility","body","string","_utility$body$string$","overflow","sqb","spacing","ratio","dimension","variable","callback","id","_utility$property","_utility$property2","_utility$property3","_utility$property4","visibility","int","_utility$body$int$var","color","backgroundColor","_utility$color$sqb$va","nxl","number","_utility$body$sqb$spa","_utility$body$sqb$spa2","isNegative","type","_utility$int$variable","utilities","addVariant","breakpoints","sizeA","sizeB","nextSize","pseudo","includes","at","dot","addBase","boxSizing","borderWidth","borderStyle","borderColor","html","lineHeight","WebkitTextSizeAdjust","MozTabSize","tabSize","fontFamily","margin","hr","height","borderTopWidth","textDecoration","fontSize","fontWeight","small","position","verticalAlign","sub","bottom","sup","top","table","textIndent","borderCollapse","padding","textTransform","WebkitAppearance","backgroundImage","outline","boxShadow","progress","outlineOffset","font","summary","fieldset","legend","listStyle","textarea","resize","opacity","cursor","maxWidth","preflight","Utility","original","rest","matchPlugin","expression","matchVariant","className","static","percentage","hsl","hex","cmin","cmax","delta","toFixed","rgb2hsl","hex2hsl","_this$rest$match","_this$rest$match2","func","prop","Processor","config","staticPlugins","Map","preflighPlugins","dynamicPlugins","_variants","count","cache","Set","_config","pluginUtils","generator","options","e","prefix","path","defaultValue","resolveConfig","extract","matched","RegExp","expr","realClass","newClass","respectPrefix","respectImportant","get","interpret","classNames","classes","success","ignored","styleSheet","has","result","Function","from","keys","addStatic","set","cls","addCSS","util","tools","_this$_config$variant2"],"mappings":"sNA8DaA,EAAa,CAAC,OAAQ,aAAc,YAAa,iBAElDC,GAAZ,SAAYA,GACRA,+BACAA,uBACAA,mCACAA,mCACAA,mCACAA,uCACAA,uCACAA,iCACAA,qDACAA,yCACAA,4CACAA,4CACAA,kDACAA,gDACAA,kDACAA,8CACAA,0CACAA,8CACAA,0CACAA,oCACAA,uCACAA,sCACAA,oCACAA,oCACAA,kDACAA,gCACAA,0BACAA,oCACAA,kCACAA,4BACAA,wCACAA,8BACAA,kCACAA,qCACAA,gCACAA,kCACAA,sCACAA,gCACAA,sCACAA,0CACAA,oCACAA,sBACAA,8BACAA,iCACAA,wBACAA,wBACAA,wBACAA,kCACAA,kCACAA,0BACAA,8BACAA,kCACAA,gDACAA,uCACAA,0BACAA,gCACAA,8BACAA,gCACAA,8BACAA,gCACAA,0CACAA,4BACAA,4BACAA,6BACAA,kDACAA,4BACAA,8CACAA,kDACAA,kCACAA,sCACAA,4BACAA,wCACAA,8BACAA,wBACAA,0BACAA,gCACAA,0CACAA,+BACAA,4CACAA,4CACAA,gCACAA,oCACAA,sBACAA,0BACAA,oCACAA,4CACAA,8CACAA,oCACAA,gCACAA,+BACAA,oCACAA,sCACAA,kCACAA,gCACAA,wCACAA,oDACAA,sDACAA,oDACAA,wDACAA,sDACAA,0CACAA,kCACAA,4CACAA,4CACAA,4BACAA,wCACAA,kDACAA,wCACAA,kCACAA,uCACAA,kCACAA,kDACAA,kCACAA,gCACAA,oCACAA,4BACAA,wBACAA,0BACAA,gCACAA,oBACAA,sCACAA,oDACAA,4CACAA,iCACAA,6CACAA,yCACAA,+CACAA,uCACAA,6BACAA,uCACAA,mCACAA,iCACAA,6CACAA,wBACAA,2BACAA,iCACAA,uBACAA,qCACAA,iDACAA,mDACAA,+DACAA,mDACAA,6CACAA,iCACAA,iCACAA,2CACAA,sCACAA,qDACAA,2BACAA,uBACAA,mCACAA,+BACAA,mCACAA,iCACAA,iCACAA,2BACAA,8BACAA,yBACAA,2CACAA,uCACAA,mDACAA,+CACAA,iDACAA,i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"}